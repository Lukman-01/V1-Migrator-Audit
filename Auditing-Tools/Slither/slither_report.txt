'npx hardhat clean' running (wd: /home/ibukun/Desktop/COA_Audit_test/v1-migrator)
'npx hardhat clean --global' running (wd: /home/ibukun/Desktop/COA_Audit_test/v1-migrator)
'npx hardhat compile --force' running (wd: /home/ibukun/Desktop/COA_Audit_test/v1-migrator)
INFO:Detectors:
ACRE._tax(address) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#114-118) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#116)
PLOT._tax(address) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#115-119) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#117)
YARD._tax(address) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#119-123) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#121)
ATLACRE._tax(address) (contracts/COA-Contracts/land-nfts/ACRE.sol#71-75) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts/ACRE.sol#73)
ATLPLOT._tax(address) (contracts/COA-Contracts/land-nfts/PLOT.sol#66-70) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts/PLOT.sol#68)
ATLYARD._tax(address) (contracts/COA-Contracts/land-nfts/YARD.sol#71-75) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts/YARD.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
GovernorUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/GovernorUpgradeable.sol#322-334) sends eth to arbitrary user
	Dangerous calls:
	- (success,returndata) = targets[i].call{value: values[i]}(calldatas[i]) (contracts/dependencies/governance/GovernorUpgradeable.sol#331)
TimelockControllerUpgradeable._execute(address,uint256,bytes) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#355-362) sends eth to arbitrary user
	Dangerous calls:
	- (success,None) = target.call{value: value}(data) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#360)
MinimalForwarderUpgradeable.execute(MinimalForwarderUpgradeable.ForwardRequest,bytes) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#52-77) sends eth to arbitrary user
	Dangerous calls:
	- (success,returndata) = req.to.call{gas: req.gas,value: req.value}(abi.encodePacked(req.data,req.from)) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#60-62)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
ERC1967UpgradeUpgradeable._functionDelegateCall(address,bytes) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#198-204) uses delegatecall to a input-controlled function id
	- (success,returndata) = target.delegatecall(data) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#202)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall
INFO:Detectors:
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#116)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#116)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (contracts/dependencies/utils/math/MathUpgradeable.sol#117)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
Reentrancy in TimelockControllerUpgradeable.executeBatch(address[],uint256[],bytes[],bytes32,bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#329-350):
	External calls:
	- _execute(target,value,payload) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#346)
		- (success,None) = target.call{value: value}(data) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#360)
	State variables written after the call(s):
	- _afterCall(id) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#349)
		- _timestamps[id] = _DONE_TIMESTAMP (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#377)
	TimelockControllerUpgradeable._timestamps (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#34) can be used in cross function reentrancies:
	- TimelockControllerUpgradeable._afterCall(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#375-378)
	- TimelockControllerUpgradeable._schedule(bytes32,uint256) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#273-277)
	- TimelockControllerUpgradeable.cancel(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#286-291)
	- TimelockControllerUpgradeable.getTimestamp(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#180-182)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
ACRE._pay(address,uint256) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#101-112) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#106-110)
ACRE._tax(address) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#114-118) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#116)
PLOT._pay(address,uint256) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#102-113) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#107-111)
PLOT._tax(address) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#115-119) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#117)
YARD._pay(address,uint256) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#105-117) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#111-115)
YARD._tax(address) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#119-123) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#121)
ATLACRE._pay(address,uint256) (contracts/COA-Contracts/land-nfts/ACRE.sol#57-69) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#63-67)
ATLACRE._tax(address) (contracts/COA-Contracts/land-nfts/ACRE.sol#71-75) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts/ACRE.sol#73)
ATLPLOT._pay(address,uint256) (contracts/COA-Contracts/land-nfts/PLOT.sol#52-64) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#58-62)
ATLPLOT._tax(address) (contracts/COA-Contracts/land-nfts/PLOT.sol#66-70) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts/PLOT.sol#68)
ATLYARD._pay(address,uint256) (contracts/COA-Contracts/land-nfts/YARD.sol#57-69) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#63-67)
ATLYARD._tax(address) (contracts/COA-Contracts/land-nfts/YARD.sol#71-75) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (contracts/COA-Contracts/land-nfts/YARD.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
GovernorPreventLateQuorumUpgradeable._extendedDeadlines (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#26) is never initialized. It is used in:
	- GovernorPreventLateQuorumUpgradeable.proposalDeadline(uint256) (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#51-53)
	- GovernorPreventLateQuorumUpgradeable._castVote(uint256,address,uint8,string,bytes) (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#61-83)
GovernorVotesQuorumFractionUpgradeable._quorumNumerator (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#20) is never initialized. It is used in:
	- GovernorVotesQuorumFractionUpgradeable.quorumNumerator() (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#43-45)
	- GovernorVotesQuorumFractionUpgradeable.quorumNumerator(uint256) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#50-65)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables
INFO:Detectors:
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#116)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#120)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#121)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#122)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#123)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#124)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#125)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#104)
	- result = prod0 * inverse (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#131)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#116)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#120)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#121)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#122)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#123)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#124)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#125)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#104)
	- result = prod0 * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#131)
Base64Upgradeable.encode(bytes) (contracts/dependencies/utils/Base64Upgradeable.sol#20-91) performs a multiplication on the result of a division:
	- result = new string(4 * ((data.length + 2) / 3)) (contracts/dependencies/utils/Base64Upgradeable.sol#36)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse = (3 * denominator) ^ 2 (contracts/dependencies/utils/math/MathUpgradeable.sol#117)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse *= 2 - denominator * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#121)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse *= 2 - denominator * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#122)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse *= 2 - denominator * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#123)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse *= 2 - denominator * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#124)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse *= 2 - denominator * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#125)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- denominator = denominator / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#102)
	- inverse *= 2 - denominator * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#126)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (contracts/dependencies/utils/math/MathUpgradeable.sol#105)
	- result = prod0 * inverse (contracts/dependencies/utils/math/MathUpgradeable.sol#132)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
TimelockControllerUpgradeable.isOperationDone(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#172-174) uses a dangerous strict equality:
	- getTimestamp(id) == _DONE_TIMESTAMP (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#173)
CheckpointsUpgradeable._insert(CheckpointsUpgradeable.Checkpoint[],uint32,uint224) (contracts/dependencies/utils/CheckpointsUpgradeable.sol#135-160) uses a dangerous strict equality:
	- last._blockNumber == key (contracts/dependencies/utils/CheckpointsUpgradeable.sol#150)
ERC20VotesUpgradeable._writeCheckpoint(ERC20VotesUpgradeable.Checkpoint[],function(uint256,uint256) returns(uint256),uint256) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#245-262) uses a dangerous strict equality:
	- pos > 0 && oldCkpt.fromBlock == block.number (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#257)
ERC4626Upgradeable._convertToAssets(uint256,MathUpgradeable.Rounding) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#194-198) uses a dangerous strict equality:
	- (supply == 0) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#196-197)
ERC4626Upgradeable._convertToShares(uint256,MathUpgradeable.Rounding) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#171-177) uses a dangerous strict equality:
	- (assets == 0 || supply == 0) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#173-176)
ERC4626Upgradeable._isVaultCollateralized() (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#260-262) uses a dangerous strict equality:
	- totalAssets() > 0 || totalSupply() == 0 (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#261)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#447-494):
	External calls:
	- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#474-479)
		- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#649-668)
	State variables written after the call(s):
	- _currentIndex = updatedIndex (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#491)
	ERC721A._currentIndex (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#81) can be used in cross function reentrancies:
	- ERC721A.ERC721A_Initialize(string,string) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#105-112)
	- ERC721A._exists(uint256) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#408-413)
	- ERC721A._transfer(address,address,uint256) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#506-552)
	- ERC721A.ownershipOf(uint256) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#205-233)
	- ERC721A.totalSupply() (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#125-131)
Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (contracts/COA-Contracts/land-nfts/ERC721A.sol#376-418):
	External calls:
	- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#404)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#558-568)
	State variables written after the call(s):
	- _currentIndex = updatedIndex (contracts/COA-Contracts/land-nfts/ERC721A.sol#415)
	ERC721A._currentIndex (contracts/COA-Contracts/land-nfts/ERC721A.sol#73) can be used in cross function reentrancies:
	- ERC721A._exists(uint256) (contracts/COA-Contracts/land-nfts/ERC721A.sol#339-342)
	- ERC721A._transfer(address,address,uint256) (contracts/COA-Contracts/land-nfts/ERC721A.sol#430-475)
	- ERC721A.constructor(string,string) (contracts/COA-Contracts/land-nfts/ERC721A.sol#97-101)
	- ERC721A.ownershipOf(uint256) (contracts/COA-Contracts/land-nfts/ERC721A.sol#188-213)
	- ERC721A.totalSupply() (contracts/COA-Contracts/land-nfts/ERC721A.sol#114-120)
Reentrancy in Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (contracts/Migrator.sol#98-133):
	External calls:
	- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
	- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
	- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	State variables written after the call(s):
	- lastAssetIdMinted[_nft2] = newLastMintedID (contracts/Migrator.sol#131)
	Migrator.lastAssetIdMinted (contracts/Migrator.sol#29) can be used in cross function reentrancies:
	- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (contracts/Migrator.sol#98-133)
	- Migrator.lastAssetIdMinted (contracts/Migrator.sol#29)
Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (contracts/Migrator.sol#216-266):
	External calls:
	- _withdrawOldNFT(Requirements.acre,_acre[i]) (contracts/Migrator.sol#228)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (contracts/Migrator.sol#230-236)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (contracts/Migrator.sol#241)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (contracts/Migrator.sol#243-249)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	State variables written after the call(s):
	- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (contracts/Migrator.sol#243-249)
		- lastAssetIdMinted[_nft2] = newLastMintedID (contracts/Migrator.sol#131)
	Migrator.lastAssetIdMinted (contracts/Migrator.sol#29) can be used in cross function reentrancies:
	- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (contracts/Migrator.sol#98-133)
	- Migrator.lastAssetIdMinted (contracts/Migrator.sol#29)
Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (contracts/Migrator.sol#216-266):
	External calls:
	- _withdrawOldNFT(Requirements.acre,_acre[i]) (contracts/Migrator.sol#228)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (contracts/Migrator.sol#230-236)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (contracts/Migrator.sol#241)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (contracts/Migrator.sol#243-249)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	- _withdrawOldNFT(Requirements.yard,_yard[i_scope_1]) (contracts/Migrator.sol#254)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (contracts/Migrator.sol#256-262)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	State variables written after the call(s):
	- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (contracts/Migrator.sol#256-262)
		- lastAssetIdMinted[_nft2] = newLastMintedID (contracts/Migrator.sol#131)
	Migrator.lastAssetIdMinted (contracts/Migrator.sol#29) can be used in cross function reentrancies:
	- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (contracts/Migrator.sol#98-133)
	- Migrator.lastAssetIdMinted (contracts/Migrator.sol#29)
Reentrancy in ACRE.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#74-99):
	External calls:
	- ! _pay(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#91)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#106-110)
	State variables written after the call(s):
	- _currentBatch.quantity = (_currentBatch.quantity - quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#97)
	ACRE._currentBatch (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#29) can be used in cross function reentrancies:
	- ACRE._currentBatch (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#29)
	- ACRE._pay(address,uint256) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#101-112)
	- ACRE.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#74-99)
	- ACRE.mintAsFreeMinter(uint256) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#172-196)
	- ACRE.setCurrentBatch(uint256,uint256,bool) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#120-137)
	- ACRE.setCurrentBatchActive(bool) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#139-142)
Reentrancy in PLOT.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#75-100):
	External calls:
	- ! _pay(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#92)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#107-111)
	State variables written after the call(s):
	- _currentBatch.quantity = (_currentBatch.quantity - quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#98)
	PLOT._currentBatch (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#30) can be used in cross function reentrancies:
	- PLOT._currentBatch (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#30)
	- PLOT._pay(address,uint256) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#102-113)
	- PLOT.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#75-100)
	- PLOT.mintAsFreeMinter(uint256) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#173-195)
	- PLOT.setCurrentBatch(uint256,uint256,bool) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#121-138)
	- PLOT.setCurrentBatchActive(bool) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#140-143)
Reentrancy in YARD.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#78-103):
	External calls:
	- ! _pay(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#95)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#111-115)
	State variables written after the call(s):
	- _currentBatch.quantity = (_currentBatch.quantity - quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#101)
	YARD._currentBatch (contracts/COA-Contracts/land-nfts-v2/YARD.sol#30) can be used in cross function reentrancies:
	- YARD._currentBatch (contracts/COA-Contracts/land-nfts-v2/YARD.sol#30)
	- YARD._pay(address,uint256) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#105-117)
	- YARD.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#78-103)
	- YARD.mintAsFreeMinter(uint256) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#178-200)
	- YARD.setCurrentBatch(uint256,uint256,bool) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#125-143)
	- YARD.setCurrentBatchActive(bool) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#145-148)
Reentrancy in ATLACRE.mint(uint256) (contracts/COA-Contracts/land-nfts/ACRE.sol#41-55):
	External calls:
	- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (contracts/COA-Contracts/land-nfts/ACRE.sol#49)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#63-67)
	State variables written after the call(s):
	- _currentBatch.quantity = (_currentBatch.quantity - quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#53)
	ATLACRE._currentBatch (contracts/COA-Contracts/land-nfts/ACRE.sol#24) can be used in cross function reentrancies:
	- ATLACRE._currentBatch (contracts/COA-Contracts/land-nfts/ACRE.sol#24)
	- ATLACRE._pay(address,uint256) (contracts/COA-Contracts/land-nfts/ACRE.sol#57-69)
	- ATLACRE.mint(uint256) (contracts/COA-Contracts/land-nfts/ACRE.sol#41-55)
	- ATLACRE.setCurrentBatch(uint256,uint256,bool) (contracts/COA-Contracts/land-nfts/ACRE.sol#77-89)
	- ATLACRE.setCurrentBatchActive(bool) (contracts/COA-Contracts/land-nfts/ACRE.sol#91-93)
Reentrancy in ATLPLOT.mint(uint256) (contracts/COA-Contracts/land-nfts/PLOT.sol#36-50):
	External calls:
	- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (contracts/COA-Contracts/land-nfts/PLOT.sol#44)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#58-62)
	State variables written after the call(s):
	- _currentBatch.quantity = (_currentBatch.quantity - quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#48)
	ATLPLOT._currentBatch (contracts/COA-Contracts/land-nfts/PLOT.sol#24) can be used in cross function reentrancies:
	- ATLPLOT._currentBatch (contracts/COA-Contracts/land-nfts/PLOT.sol#24)
	- ATLPLOT._pay(address,uint256) (contracts/COA-Contracts/land-nfts/PLOT.sol#52-64)
	- ATLPLOT.mint(uint256) (contracts/COA-Contracts/land-nfts/PLOT.sol#36-50)
	- ATLPLOT.setCurrentBatch(uint256,uint256,bool) (contracts/COA-Contracts/land-nfts/PLOT.sol#72-84)
	- ATLPLOT.setCurrentBatchActive(bool) (contracts/COA-Contracts/land-nfts/PLOT.sol#86-88)
Reentrancy in ATLYARD.mint(uint256) (contracts/COA-Contracts/land-nfts/YARD.sol#41-55):
	External calls:
	- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (contracts/COA-Contracts/land-nfts/YARD.sol#49)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#63-67)
	State variables written after the call(s):
	- _currentBatch.quantity = (_currentBatch.quantity - quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#53)
	ATLYARD._currentBatch (contracts/COA-Contracts/land-nfts/YARD.sol#24) can be used in cross function reentrancies:
	- ATLYARD._currentBatch (contracts/COA-Contracts/land-nfts/YARD.sol#24)
	- ATLYARD._pay(address,uint256) (contracts/COA-Contracts/land-nfts/YARD.sol#57-69)
	- ATLYARD.mint(uint256) (contracts/COA-Contracts/land-nfts/YARD.sol#41-55)
	- ATLYARD.setCurrentBatch(uint256,uint256,bool) (contracts/COA-Contracts/land-nfts/YARD.sol#77-89)
	- ATLYARD.setCurrentBatchActive(bool) (contracts/COA-Contracts/land-nfts/YARD.sol#91-93)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Migrator._mintNewNFT(address,address,address,uint256,uint256[]).quantityMinted (contracts/Migrator.sol#108) is a local variable never initialized
Migrator._mintNewNFT(address,address,address,uint256,uint256[]).newLastMintedID (contracts/Migrator.sol#110) is a local variable never initialized
Migrator._mintNewNFT(address,address,address,uint256,uint256[]).counter (contracts/Migrator.sol#111) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
GovernorUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/GovernorUpgradeable.sol#322-334) ignores return value by AddressUpgradeable.verifyCallResult(success,returndata,errorMessage) (contracts/dependencies/governance/GovernorUpgradeable.sol#332)
GovernorUpgradeable.relay(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#549-555) ignores return value by AddressUpgradeable.functionCallWithValue(target,data,value) (contracts/dependencies/governance/GovernorUpgradeable.sol#554)
GovernorTimelockCompoundUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#96-119) ignores return value by _timelock.queueTransaction(targets[i],values[i],,calldatas[i],eta) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#113)
GovernorTimelockCompoundUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#124-137) ignores return value by _timelock.executeTransaction(targets[i],values[i],,calldatas[i],eta) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#135)
GovernorVotesQuorumFractionUpgradeable._updateQuorumNumerator(uint256) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#104-123) ignores return value by _quorumNumeratorHistory.push(newQuorumNumerator) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#120)
AccessControlEnumerableUpgradeable._grantRole(bytes32,address) (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#58-61) ignores return value by _roleMembers[role].add(account) (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#60)
AccessControlEnumerableUpgradeable._revokeRole(bytes32,address) (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#66-69) ignores return value by _roleMembers[role].remove(account) (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#68)
ERC721ConsecutiveUpgradeable._mintConsecutive(address,uint96) (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#73-95) ignores return value by _sequentialOwnership.push(last,uint160(to)) (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#87)
ERC721ConsecutiveUpgradeable._totalConsecutiveSupply() (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#126-129) ignores return value by (exists,latestId,None) = _sequentialOwnership.latestCheckpoint() (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#127)
VotesUpgradeable._transferVotingUnits(address,address,uint256) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#145-157) ignores return value by _totalCheckpoints.push(_add,amount) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#151)
VotesUpgradeable._transferVotingUnits(address,address,uint256) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#145-157) ignores return value by _totalCheckpoints.push(_subtract,amount) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#154)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
ERC1155PresetMinterPauserUpgradeable.initialize(string).uri (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#30) shadows:
	- ERC1155Upgradeable.uri(uint256) (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#64-66) (function)
	- IERC1155MetadataURIUpgradeable.uri(uint256) (contracts/dependencies/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol#21) (function)
ERC1155PresetMinterPauserUpgradeable.__ERC1155PresetMinterPauser_init(string).uri (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#40) shadows:
	- ERC1155Upgradeable.uri(uint256) (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#64-66) (function)
	- IERC1155MetadataURIUpgradeable.uri(uint256) (contracts/dependencies/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol#21) (function)
ERC20PermitUpgradeable.__ERC20Permit_init(string).name (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#47) shadows:
	- ERC20Upgradeable.name() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)
ERC20PresetFixedSupplyUpgradeable.initialize(string,string,uint256,address).name (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#24) shadows:
	- ERC20Upgradeable.name() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)
ERC20PresetFixedSupplyUpgradeable.initialize(string,string,uint256,address).symbol (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#25) shadows:
	- ERC20Upgradeable.symbol() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#75-77) (function)
	- IERC20MetadataUpgradeable.symbol() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)
ERC20PresetFixedSupplyUpgradeable.__ERC20PresetFixedSupply_init(string,string,uint256,address).name (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#37) shadows:
	- ERC20Upgradeable.name() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)
ERC20PresetFixedSupplyUpgradeable.__ERC20PresetFixedSupply_init(string,string,uint256,address).symbol (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#38) shadows:
	- ERC20Upgradeable.symbol() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#75-77) (function)
	- IERC20MetadataUpgradeable.symbol() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)
ERC20PresetMinterPauserUpgradeable.initialize(string,string).name (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#30) shadows:
	- ERC20Upgradeable.name() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)
ERC20PresetMinterPauserUpgradeable.initialize(string,string).symbol (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#30) shadows:
	- ERC20Upgradeable.symbol() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#75-77) (function)
	- IERC20MetadataUpgradeable.symbol() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)
ERC20PresetMinterPauserUpgradeable.__ERC20PresetMinterPauser_init(string,string).name (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#42) shadows:
	- ERC20Upgradeable.name() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)
ERC20PresetMinterPauserUpgradeable.__ERC20PresetMinterPauser_init(string,string).symbol (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#42) shadows:
	- ERC20Upgradeable.symbol() (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#75-77) (function)
	- IERC20MetadataUpgradeable.symbol() (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)
ERC721PresetMinterPauserAutoIdUpgradeable.initialize(string,string,string).name (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#40) shadows:
	- ERC721Upgradeable.name() (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#84-86) (function)
	- IERC721MetadataUpgradeable.name() (contracts/dependencies/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#16) (function)
ERC721PresetMinterPauserAutoIdUpgradeable.initialize(string,string,string).symbol (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#41) shadows:
	- ERC721Upgradeable.symbol() (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#91-93) (function)
	- IERC721MetadataUpgradeable.symbol() (contracts/dependencies/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#21) (function)
ERC721PresetMinterPauserAutoIdUpgradeable.__ERC721PresetMinterPauserAutoId_init(string,string,string).name (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#63) shadows:
	- ERC721Upgradeable.name() (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#84-86) (function)
	- IERC721MetadataUpgradeable.name() (contracts/dependencies/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#16) (function)
ERC721PresetMinterPauserAutoIdUpgradeable.__ERC721PresetMinterPauserAutoId_init(string,string,string).symbol (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#64) shadows:
	- ERC721Upgradeable.symbol() (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#91-93) (function)
	- IERC721MetadataUpgradeable.symbol() (contracts/dependencies/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#21) (function)
ERC777PresetFixedSupplyUpgradeable.initialize(string,string,address[],uint256,address).name (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#18) shadows:
	- ERC777Upgradeable.name() (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#90-92) (function)
	- IERC777Upgradeable.name() (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#43) (function)
ERC777PresetFixedSupplyUpgradeable.initialize(string,string,address[],uint256,address).symbol (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#19) shadows:
	- ERC777Upgradeable.symbol() (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#97-99) (function)
	- IERC777Upgradeable.symbol() (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#49) (function)
ERC777PresetFixedSupplyUpgradeable.initialize(string,string,address[],uint256,address).defaultOperators (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#20) shadows:
	- ERC777Upgradeable.defaultOperators() (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#212-214) (function)
	- IERC777Upgradeable.defaultOperators() (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#150) (function)
ERC777PresetFixedSupplyUpgradeable.__ERC777PresetFixedSupply_init(string,string,address[],uint256,address).name (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#32) shadows:
	- ERC777Upgradeable.name() (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#90-92) (function)
	- IERC777Upgradeable.name() (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#43) (function)
ERC777PresetFixedSupplyUpgradeable.__ERC777PresetFixedSupply_init(string,string,address[],uint256,address).symbol (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#33) shadows:
	- ERC777Upgradeable.symbol() (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#97-99) (function)
	- IERC777Upgradeable.symbol() (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#49) (function)
ERC777PresetFixedSupplyUpgradeable.__ERC777PresetFixedSupply_init(string,string,address[],uint256,address).defaultOperators (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#34) shadows:
	- ERC777Upgradeable.defaultOperators() (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#212-214) (function)
	- IERC777Upgradeable.defaultOperators() (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#150) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
ATLACRE.setTxFee(uint256) (contracts/COA-Contracts/land-nfts/ACRE.sol#95-97) should emit an event for: 
	- _txFeeAmount = amount (contracts/COA-Contracts/land-nfts/ACRE.sol#96) 
ATLPLOT.setTxFee(uint256) (contracts/COA-Contracts/land-nfts/PLOT.sol#90-92) should emit an event for: 
	- _txFeeAmount = amount (contracts/COA-Contracts/land-nfts/PLOT.sol#91) 
ATLYARD.setTxFee(uint256) (contracts/COA-Contracts/land-nfts/YARD.sol#95-97) should emit an event for: 
	- _txFeeAmount = amount (contracts/COA-Contracts/land-nfts/YARD.sol#96) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
ACRE.initialize(address).paymentToken (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#41) lacks a zero-check on :
		- _paymentToken = paymentToken (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#44)
ACRE.setPaymentToken(address).token (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#149) lacks a zero-check on :
		- _paymentToken = token (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#151)
ACRE.setFeeCollector(address).collector (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#154) lacks a zero-check on :
		- _feeCollector = collector (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#156)
PLOT.initialize(address).paymentToken (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#42) lacks a zero-check on :
		- _paymentToken = paymentToken (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#45)
PLOT.setPaymentToken(address).token (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#150) lacks a zero-check on :
		- _paymentToken = token (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#152)
PLOT.setFeeCollector(address).collector (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#155) lacks a zero-check on :
		- _feeCollector = collector (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#157)
YARD.initialize(address).paymentToken (contracts/COA-Contracts/land-nfts-v2/YARD.sol#42) lacks a zero-check on :
		- _paymentToken = paymentToken (contracts/COA-Contracts/land-nfts-v2/YARD.sol#45)
YARD.setPaymentToken(address).token (contracts/COA-Contracts/land-nfts-v2/YARD.sol#155) lacks a zero-check on :
		- _paymentToken = token (contracts/COA-Contracts/land-nfts-v2/YARD.sol#157)
YARD.setFeeCollector(address).collector (contracts/COA-Contracts/land-nfts-v2/YARD.sol#160) lacks a zero-check on :
		- _feeCollector = collector (contracts/COA-Contracts/land-nfts-v2/YARD.sol#162)
ATLACRE.constructor(address).paymentToken (contracts/COA-Contracts/land-nfts/ACRE.sol#9) lacks a zero-check on :
		- _paymentToken = paymentToken (contracts/COA-Contracts/land-nfts/ACRE.sol#10)
ATLACRE.setPaymentToken(address).token (contracts/COA-Contracts/land-nfts/ACRE.sol#99) lacks a zero-check on :
		- _paymentToken = token (contracts/COA-Contracts/land-nfts/ACRE.sol#100)
ATLACRE.setFeeCollector(address).collector (contracts/COA-Contracts/land-nfts/ACRE.sol#103) lacks a zero-check on :
		- _feeCollector = collector (contracts/COA-Contracts/land-nfts/ACRE.sol#104)
ATLPLOT.constructor(address).paymentToken (contracts/COA-Contracts/land-nfts/PLOT.sol#9) lacks a zero-check on :
		- _paymentToken = paymentToken (contracts/COA-Contracts/land-nfts/PLOT.sol#10)
ATLPLOT.setPaymentToken(address).token (contracts/COA-Contracts/land-nfts/PLOT.sol#94) lacks a zero-check on :
		- _paymentToken = token (contracts/COA-Contracts/land-nfts/PLOT.sol#95)
ATLPLOT.setFeeCollector(address).collector (contracts/COA-Contracts/land-nfts/PLOT.sol#98) lacks a zero-check on :
		- _feeCollector = collector (contracts/COA-Contracts/land-nfts/PLOT.sol#99)
ATLYARD.constructor(address).paymentToken (contracts/COA-Contracts/land-nfts/YARD.sol#9) lacks a zero-check on :
		- _paymentToken = paymentToken (contracts/COA-Contracts/land-nfts/YARD.sol#10)
ATLYARD.setPaymentToken(address).token (contracts/COA-Contracts/land-nfts/YARD.sol#99) lacks a zero-check on :
		- _paymentToken = token (contracts/COA-Contracts/land-nfts/YARD.sol#100)
ATLYARD.setFeeCollector(address).collector (contracts/COA-Contracts/land-nfts/YARD.sol#103) lacks a zero-check on :
		- _feeCollector = collector (contracts/COA-Contracts/land-nfts/YARD.sol#104)
Ownable2StepUpgradeable.transferOwnership(address).newOwner (contracts/dependencies/access/Ownable2StepUpgradeable.sol#42) lacks a zero-check on :
		- _pendingOwner = newOwner (contracts/dependencies/access/Ownable2StepUpgradeable.sol#43)
CrossChainEnabledAMBUpgradeable.constructor(address).bridge (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#33) lacks a zero-check on :
		- _bridge = bridge (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#34)
CrossChainEnabledPolygonChildUpgradeable.processMessageFromRoot(uint256,address,bytes).rootMessageSender (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#64) lacks a zero-check on :
		- _sender = rootMessageSender (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#69)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Migrator._withdrawOldNFT(address,uint256) (contracts/Migrator.sol#75-93) has external calls inside a loop: isSenderNftOwner = ICollectible(_nft1).ownerOf(_tokenId) (contracts/Migrator.sol#79)
Migrator._withdrawOldNFT(address,uint256) (contracts/Migrator.sol#75-93) has external calls inside a loop: isApproved = ICollectible(_nft1).isApprovedForAll(_msgSender(),address(this)) (contracts/Migrator.sol#83-86)
Migrator._withdrawOldNFT(address,uint256) (contracts/Migrator.sol#75-93) has external calls inside a loop: ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
TimelockControllerUpgradeable._execute(address,uint256,bytes) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#355-362) has external calls inside a loop: (success,None) = target.call{value: value}(data) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#360)
GovernorTimelockCompoundUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#96-119) has external calls inside a loop: require(bool,string)(! _timelock.queuedTransactions(keccak256(bytes)(abi.encode(targets[i],values[i],,calldatas[i],eta))),GovernorTimelockCompound: identical proposal action already queued) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#109-112)
GovernorTimelockCompoundUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#96-119) has external calls inside a loop: _timelock.queueTransaction(targets[i],values[i],,calldatas[i],eta) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#113)
MulticallUpgradeable._functionDelegateCall(address,bytes) (contracts/dependencies/utils/MulticallUpgradeable.sol#37-43) has external calls inside a loop: (success,returndata) = target.delegatecall(data) (contracts/dependencies/utils/MulticallUpgradeable.sol#41)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in ERC777Upgradeable._burn(address,uint256,bytes,bytes) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#399-423):
	External calls:
	- _callTokensToSend(operator,from,address(0),amount,data,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#409)
		- IERC777SenderUpgradeable(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#482)
	State variables written after the call(s):
	- _balances[from] = fromBalance - amount (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#417)
	- _totalSupply -= amount (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#419)
Reentrancy in ERC4626Upgradeable._deposit(address,address,uint256,uint256) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#215-232):
	External calls:
	- SafeERC20Upgradeable.safeTransferFrom(_asset,caller,address(this),assets) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#228)
	State variables written after the call(s):
	- _mint(receiver,shares) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#229)
		- _balances[account] += amount (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#272)
	- _mint(receiver,shares) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#229)
		- _totalSupply += amount (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#269)
Reentrancy in ERC777Upgradeable._send(address,address,uint256,bytes,bytes,bool) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#372-390):
	External calls:
	- _callTokensToSend(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#385)
		- IERC777SenderUpgradeable(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#482)
	State variables written after the call(s):
	- _move(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#387)
		- _balances[from] = fromBalance - amount (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#438)
		- _balances[to] += amount (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#440)
Reentrancy in ERC20WrapperUpgradeable.depositFor(address,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#46-50):
	External calls:
	- SafeERC20Upgradeable.safeTransferFrom(underlying,_msgSender(),address(this),amount) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#47)
	State variables written after the call(s):
	- _mint(account,amount) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#48)
		- _balances[account] += amount (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#272)
	- _mint(account,amount) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#48)
		- _totalSupply += amount (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#269)
Reentrancy in ERC20FlashMintUpgradeable.flashLoan(IERC3156FlashBorrowerUpgradeable,address,uint256,bytes) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#92-114):
	External calls:
	- require(bool,string)(receiver.onFlashLoan(msg.sender,token,amount,fee,data) == _RETURN_VALUE,ERC20FlashMint: invalid return value) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#101-104)
	State variables written after the call(s):
	- _spendAllowance(address(receiver),address(this),amount + fee) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#106)
		- _allowances[owner][spender] = amount (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#329)
Reentrancy in Migrator.migrateERC20Token(uint256,address,address) (contracts/Migrator.sol#138-211):
	External calls:
	- success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount) (contracts/Migrator.sol#185-189)
	- success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount) (contracts/Migrator.sol#193-196)
	State variables written after the call(s):
	- tokensMigrated[_token1] += _amount (contracts/Migrator.sol#200)
	- tokensMigrated[_token2] += tokenBToRecieve (contracts/Migrator.sol#201)
Reentrancy in CrossChainEnabledPolygonChildUpgradeable.processMessageFromRoot(uint256,address,bytes) (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#62-72):
	External calls:
	- __functionDelegateCall(address(this),data) (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#70)
		- (success,returndata) = target.delegatecall(data) (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#80)
	State variables written after the call(s):
	- _sender = DEFAULT_SENDER (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#71)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in ERC777PresetFixedSupplyUpgradeable.__ERC777PresetFixedSupply_init(string,string,address[],uint256,address) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#31-40):
	External calls:
	- __ERC777_init_unchained(name,symbol,defaultOperators) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#38)
		- _ERC1820_REGISTRY.setInterfaceImplementer(address(this),keccak256(bytes)(ERC777Token),address(this)) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#83)
		- _ERC1820_REGISTRY.setInterfaceImplementer(address(this),keccak256(bytes)(ERC20Token),address(this)) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#84)
	- __ERC777PresetFixedSupply_init_unchained(name,symbol,defaultOperators,initialSupply,owner) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#39)
		- IERC777RecipientUpgradeable(implementer).tokensReceived(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#508)
	Event emitted after the call(s):
	- Minted(operator,account,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#359)
		- __ERC777PresetFixedSupply_init_unchained(name,symbol,defaultOperators,initialSupply,owner) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#39)
	- Transfer(address(0),account,amount) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#360)
		- __ERC777PresetFixedSupply_init_unchained(name,symbol,defaultOperators,initialSupply,owner) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#39)
Reentrancy in ERC777Upgradeable._burn(address,uint256,bytes,bytes) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#399-423):
	External calls:
	- _callTokensToSend(operator,from,address(0),amount,data,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#409)
		- IERC777SenderUpgradeable(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#482)
	Event emitted after the call(s):
	- Burned(operator,from,amount,data,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#421)
	- Transfer(from,address(0),amount) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#422)
Reentrancy in ERC4626Upgradeable._deposit(address,address,uint256,uint256) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#215-232):
	External calls:
	- SafeERC20Upgradeable.safeTransferFrom(_asset,caller,address(this),assets) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#228)
	Event emitted after the call(s):
	- Deposit(caller,receiver,assets,shares) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#231)
	- Transfer(address(0),account,amount) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#274)
		- _mint(receiver,shares) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#229)
Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#447-494):
	External calls:
	- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#474-479)
		- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#649-668)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#472)
Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (contracts/COA-Contracts/land-nfts/ERC721A.sol#376-418):
	External calls:
	- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#404)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#558-568)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts/ERC721A.sol#403)
Reentrancy in ERC777Upgradeable._mint(address,uint256,bytes,bytes,bool) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#340-361):
	External calls:
	- _callTokensReceived(operator,address(0),account,amount,userData,operatorData,requireReceptionAck) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#357)
		- IERC777RecipientUpgradeable(implementer).tokensReceived(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#508)
	Event emitted after the call(s):
	- Minted(operator,account,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#359)
	- Transfer(address(0),account,amount) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#360)
Reentrancy in Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (contracts/Migrator.sol#98-133):
	External calls:
	- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
	- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
	- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	Event emitted after the call(s):
	- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (contracts/Migrator.sol#117-124)
Reentrancy in ERC777Upgradeable._send(address,address,uint256,bytes,bytes,bool) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#372-390):
	External calls:
	- _callTokensToSend(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#385)
		- IERC777SenderUpgradeable(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#482)
	Event emitted after the call(s):
	- Sent(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#442)
		- _move(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#387)
	- Transfer(from,to,amount) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#443)
		- _move(operator,from,to,amount,userData,operatorData) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#387)
Reentrancy in ERC4626Upgradeable._withdraw(address,address,address,uint256,uint256) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#237-258):
	External calls:
	- SafeERC20Upgradeable.safeTransfer(_asset,receiver,assets) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#255)
	Event emitted after the call(s):
	- Withdraw(caller,receiver,owner,assets,shares) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#257)
Reentrancy in ERC20WrapperUpgradeable.depositFor(address,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#46-50):
	External calls:
	- SafeERC20Upgradeable.safeTransferFrom(underlying,_msgSender(),address(this),amount) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#47)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#274)
		- _mint(account,amount) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#48)
Reentrancy in TimelockControllerUpgradeable.execute(address,uint256,bytes,bytes32,bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#305-318):
	External calls:
	- _execute(target,value,payload) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#315)
		- (success,None) = target.call{value: value}(data) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#360)
	Event emitted after the call(s):
	- CallExecuted(id,0,target,value,payload) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#316)
Reentrancy in TimelockControllerUpgradeable.executeBatch(address[],uint256[],bytes[],bytes32,bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#329-350):
	External calls:
	- _execute(target,value,payload) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#346)
		- (success,None) = target.call{value: value}(data) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#360)
	Event emitted after the call(s):
	- CallExecuted(id,i,target,value,payload) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#347)
Reentrancy in ERC20FlashMintUpgradeable.flashLoan(IERC3156FlashBorrowerUpgradeable,address,uint256,bytes) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#92-114):
	External calls:
	- require(bool,string)(receiver.onFlashLoan(msg.sender,token,amount,fee,data) == _RETURN_VALUE,ERC20FlashMint: invalid return value) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#101-104)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#330)
		- _spendAllowance(address(receiver),address(this),amount + fee) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#106)
	- Transfer(account,address(0),amount) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#303)
		- _burn(address(receiver),amount) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#110)
	- Transfer(account,address(0),amount) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#303)
		- _burn(address(receiver),amount + fee) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#108)
	- Transfer(from,to,amount) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#250)
		- _transfer(address(receiver),flashFeeReceiver,fee) (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#111)
Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (contracts/Migrator.sol#216-266):
	External calls:
	- _withdrawOldNFT(Requirements.acre,_acre[i]) (contracts/Migrator.sol#228)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (contracts/Migrator.sol#230-236)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	Event emitted after the call(s):
	- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (contracts/Migrator.sol#117-124)
		- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (contracts/Migrator.sol#230-236)
Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (contracts/Migrator.sol#216-266):
	External calls:
	- _withdrawOldNFT(Requirements.acre,_acre[i]) (contracts/Migrator.sol#228)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (contracts/Migrator.sol#230-236)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (contracts/Migrator.sol#241)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (contracts/Migrator.sol#243-249)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	Event emitted after the call(s):
	- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (contracts/Migrator.sol#117-124)
		- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (contracts/Migrator.sol#243-249)
Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (contracts/Migrator.sol#216-266):
	External calls:
	- _withdrawOldNFT(Requirements.acre,_acre[i]) (contracts/Migrator.sol#228)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (contracts/Migrator.sol#230-236)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (contracts/Migrator.sol#241)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (contracts/Migrator.sol#243-249)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	- _withdrawOldNFT(Requirements.yard,_yard[i_scope_1]) (contracts/Migrator.sol#254)
		- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (contracts/Migrator.sol#90)
	- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (contracts/Migrator.sol#256-262)
		- nftObj.mintAsFreeMinter(_quantity) (contracts/Migrator.sol#106)
		- totalSupply = nftObj.totalSupply() (contracts/Migrator.sol#107)
		- nftObj.transferFrom(address(this),_user,index) (contracts/Migrator.sol#115)
	Event emitted after the call(s):
	- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (contracts/Migrator.sol#117-124)
		- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (contracts/Migrator.sol#256-262)
Reentrancy in Migrator.migrateERC20Token(uint256,address,address) (contracts/Migrator.sol#138-211):
	External calls:
	- success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount) (contracts/Migrator.sol#185-189)
	- success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount) (contracts/Migrator.sol#193-196)
	Event emitted after the call(s):
	- TokenMigrationCompleted(_msgSender(),Requirements.tokenV1,Requirements.tokenV2,_amount,tokenBToRecieve,block.timestamp) (contracts/Migrator.sol#202-209)
Reentrancy in ACRE.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#74-99):
	External calls:
	- ! _pay(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#91)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#106-110)
	- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#98)
		- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#649-668)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#472)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#98)
	- Transfer(address(0),to,updatedIndex ++) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#488)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#98)
Reentrancy in PLOT.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#75-100):
	External calls:
	- ! _pay(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#92)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#107-111)
	- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#99)
		- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#649-668)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#472)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#99)
	- Transfer(address(0),to,updatedIndex ++) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#488)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#99)
Reentrancy in YARD.mint(uint256) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#78-103):
	External calls:
	- ! _pay(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#95)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#111-115)
	- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#102)
		- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#649-668)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#472)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#102)
	- Transfer(address(0),to,updatedIndex ++) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#488)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#102)
Reentrancy in ATLACRE.mint(uint256) (contracts/COA-Contracts/land-nfts/ACRE.sol#41-55):
	External calls:
	- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (contracts/COA-Contracts/land-nfts/ACRE.sol#49)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#63-67)
	- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#54)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#558-568)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts/ERC721A.sol#403)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#54)
	- Transfer(address(0),to,updatedIndex ++) (contracts/COA-Contracts/land-nfts/ERC721A.sol#412)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/ACRE.sol#54)
Reentrancy in ATLPLOT.mint(uint256) (contracts/COA-Contracts/land-nfts/PLOT.sol#36-50):
	External calls:
	- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (contracts/COA-Contracts/land-nfts/PLOT.sol#44)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#58-62)
	- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#49)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#558-568)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts/ERC721A.sol#403)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#49)
	- Transfer(address(0),to,updatedIndex ++) (contracts/COA-Contracts/land-nfts/ERC721A.sol#412)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/PLOT.sol#49)
Reentrancy in ATLYARD.mint(uint256) (contracts/COA-Contracts/land-nfts/YARD.sol#41-55):
	External calls:
	- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (contracts/COA-Contracts/land-nfts/YARD.sol#49)
		- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#63-67)
	- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#54)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (contracts/COA-Contracts/land-nfts/ERC721A.sol#558-568)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (contracts/COA-Contracts/land-nfts/ERC721A.sol#403)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#54)
	- Transfer(address(0),to,updatedIndex ++) (contracts/COA-Contracts/land-nfts/ERC721A.sol#412)
		- _safeMint(msg.sender,quantity) (contracts/COA-Contracts/land-nfts/YARD.sol#54)
Reentrancy in GovernorTimelockCompoundUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#96-119):
	External calls:
	- _timelock.queueTransaction(targets[i],values[i],,calldatas[i],eta) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#113)
	Event emitted after the call(s):
	- ProposalQueued(proposalId,eta) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#116)
Reentrancy in GovernorTimelockControlUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#95-112):
	External calls:
	- _timelock.scheduleBatch(targets,values,calldatas,0,descriptionHash,delay) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#107)
	Event emitted after the call(s):
	- ProposalQueued(proposalId,block.timestamp + delay) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#109)
Reentrancy in PaymentSplitterUpgradeable.release(address) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#150-166):
	External calls:
	- AddressUpgradeable.sendValue(account,payment) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#164)
	Event emitted after the call(s):
	- PaymentReleased(account,payment) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#165)
Reentrancy in PaymentSplitterUpgradeable.release(IERC20Upgradeable,address) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#173-190):
	External calls:
	- SafeERC20Upgradeable.safeTransfer(token,account,payment) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#188)
	Event emitted after the call(s):
	- ERC20PaymentReleased(token,account,payment) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#189)
Reentrancy in EscrowUpgradeable.withdraw(address) (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#68-76):
	External calls:
	- payee.sendValue(payment) (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#73)
	Event emitted after the call(s):
	- Withdrawn(payee,payment) (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
MinimalForwarderUpgradeable.execute(MinimalForwarderUpgradeable.ForwardRequest,bytes) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#52-77) tries to limit the gas of an external call that controls implicit decoding
	(success,returndata) = req.to.call{gas: req.gas,value: req.value}(abi.encodePacked(req.data,req.from)) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#60-62)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#return-bomb
INFO:Detectors:
VestingWalletUpgradeable._vestingSchedule(uint256,uint64) (contracts/dependencies/finance/VestingWalletUpgradeable.sol#151-159) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp < start() (contracts/dependencies/finance/VestingWalletUpgradeable.sol#152)
	- timestamp > start() + duration() (contracts/dependencies/finance/VestingWalletUpgradeable.sol#154)
TimelockControllerUpgradeable.isOperation(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#150-152) uses timestamp for comparisons
	Dangerous comparisons:
	- getTimestamp(id) > 0 (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#151)
TimelockControllerUpgradeable.isOperationPending(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#157-159) uses timestamp for comparisons
	Dangerous comparisons:
	- getTimestamp(id) > _DONE_TIMESTAMP (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#158)
TimelockControllerUpgradeable.isOperationReady(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#164-167) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp > _DONE_TIMESTAMP && timestamp <= block.timestamp (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#166)
TimelockControllerUpgradeable.isOperationDone(bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#172-174) uses timestamp for comparisons
	Dangerous comparisons:
	- getTimestamp(id) == _DONE_TIMESTAMP (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#173)
TimelockControllerUpgradeable._beforeCall(bytes32,bytes32) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#367-370) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(predecessor == bytes32(0) || isOperationDone(predecessor),TimelockController: missing dependency) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#369)
GovernorTimelockCompoundUpgradeable.state(uint256) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#62-77) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= eta + _timelock.GRACE_PERIOD() (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#72)
GovernorTimelockCompoundUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#96-119) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! _timelock.queuedTransactions(keccak256(bytes)(abi.encode(targets[i],values[i],,calldatas[i],eta))),GovernorTimelockCompound: identical proposal action already queued) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#109-112)
VotesUpgradeable.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#109-126) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= expiry,Votes: signature expired) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#117)
ERC20VotesUpgradeable.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#152-169) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= expiry,ERC20Votes: signature expired) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#160)
ERC20PermitUpgradeable.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#56-75) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,ERC20Permit: expired deadline) (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#65)
TokenTimelockUpgradeable.__TokenTimelock_init_unchained(IERC20Upgradeable,address,uint256) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#43-52) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(releaseTime_ > block.timestamp,TokenTimelock: release time is before current time) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#48)
TokenTimelockUpgradeable.release() (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#79-86) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= releaseTime(),TokenTimelock: current time is before release time) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#80)
TimersUpgradeable.isPending(TimersUpgradeable.Timestamp) (contracts/dependencies/utils/TimersUpgradeable.sol#34-36) uses timestamp for comparisons
	Dangerous comparisons:
	- timer._deadline > block.timestamp (contracts/dependencies/utils/TimersUpgradeable.sol#35)
TimersUpgradeable.isExpired(TimersUpgradeable.Timestamp) (contracts/dependencies/utils/TimersUpgradeable.sol#38-40) uses timestamp for comparisons
	Dangerous comparisons:
	- isStarted(timer) && timer._deadline <= block.timestamp (contracts/dependencies/utils/TimersUpgradeable.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
AddressUpgradeable._revert(bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#231-243) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#236-239)
StringsUpgradeable.toString(uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#19-39) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#25-27)
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#31-33)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#55-134) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#62-66)
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#85-92)
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#99-108)
Address._revert(bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#231-243) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#236-239)
Strings.toString(uint256) (node_modules/@openzeppelin/contracts/utils/Strings.sol#19-39) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Strings.sol#25-27)
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Strings.sol#31-33)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#62-66)
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#85-92)
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#99-108)
ERC721A._checkContractOnERC721Received(address,address,uint256,bytes) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#643-669) uses assembly
	- INLINE ASM (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#664-666)
ERC721A._checkContractOnERC721Received(address,address,uint256,bytes) (contracts/COA-Contracts/land-nfts/ERC721A.sol#552-569) uses assembly
	- INLINE ASM (contracts/COA-Contracts/land-nfts/ERC721A.sol#564-566)
ERC2771ContextUpgradeable._msgSender() (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#25-35) uses assembly
	- INLINE ASM (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#29-31)
MinimalForwarderUpgradeable.execute(MinimalForwarderUpgradeable.ForwardRequest,bytes) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#52-77) uses assembly
	- INLINE ASM (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#71-73)
ClonesUpgradeable.clone(address) (contracts/dependencies/proxy/ClonesUpgradeable.sol#25-36) uses assembly
	- INLINE ASM (contracts/dependencies/proxy/ClonesUpgradeable.sol#27-34)
ClonesUpgradeable.cloneDeterministic(address,bytes32) (contracts/dependencies/proxy/ClonesUpgradeable.sol#45-56) uses assembly
	- INLINE ASM (contracts/dependencies/proxy/ClonesUpgradeable.sol#47-54)
ClonesUpgradeable.predictDeterministicAddress(address,bytes32,address) (contracts/dependencies/proxy/ClonesUpgradeable.sol#61-77) uses assembly
	- INLINE ASM (contracts/dependencies/proxy/ClonesUpgradeable.sol#67-76)
ERC20VotesUpgradeable._unsafeAccess(ERC20VotesUpgradeable.Checkpoint[],uint256) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#272-277) uses assembly
	- INLINE ASM (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#273-276)
ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#434-456) uses assembly
	- INLINE ASM (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#448-450)
AddressUpgradeable._revert(bytes,string) (contracts/dependencies/utils/AddressUpgradeable.sol#206-218) uses assembly
	- INLINE ASM (contracts/dependencies/utils/AddressUpgradeable.sol#211-214)
ArraysUpgradeable.unsafeAccess(address[],uint256) (contracts/dependencies/utils/ArraysUpgradeable.sol#57-65) uses assembly
	- INLINE ASM (contracts/dependencies/utils/ArraysUpgradeable.sol#60-63)
ArraysUpgradeable.unsafeAccess(bytes32[],uint256) (contracts/dependencies/utils/ArraysUpgradeable.sol#72-80) uses assembly
	- INLINE ASM (contracts/dependencies/utils/ArraysUpgradeable.sol#75-78)
ArraysUpgradeable.unsafeAccess(uint256[],uint256) (contracts/dependencies/utils/ArraysUpgradeable.sol#87-95) uses assembly
	- INLINE ASM (contracts/dependencies/utils/ArraysUpgradeable.sol#90-93)
Base64Upgradeable.encode(bytes) (contracts/dependencies/utils/Base64Upgradeable.sol#20-91) uses assembly
	- INLINE ASM (contracts/dependencies/utils/Base64Upgradeable.sol#39-88)
CheckpointsUpgradeable._unsafeAccess(CheckpointsUpgradeable.Checkpoint[],uint256) (contracts/dependencies/utils/CheckpointsUpgradeable.sol#208-213) uses assembly
	- INLINE ASM (contracts/dependencies/utils/CheckpointsUpgradeable.sol#209-212)
CheckpointsUpgradeable._unsafeAccess(CheckpointsUpgradeable.Checkpoint224[],uint256) (contracts/dependencies/utils/CheckpointsUpgradeable.sol#369-378) uses assembly
	- INLINE ASM (contracts/dependencies/utils/CheckpointsUpgradeable.sol#374-377)
CheckpointsUpgradeable._unsafeAccess(CheckpointsUpgradeable.Checkpoint160[],uint256) (contracts/dependencies/utils/CheckpointsUpgradeable.sol#534-543) uses assembly
	- INLINE ASM (contracts/dependencies/utils/CheckpointsUpgradeable.sol#539-542)
Create2Upgradeable.deploy(uint256,bytes32,bytes) (contracts/dependencies/utils/Create2Upgradeable.sol#30-42) uses assembly
	- INLINE ASM (contracts/dependencies/utils/Create2Upgradeable.sol#38-40)
Create2Upgradeable.computeAddress(bytes32,bytes32,address) (contracts/dependencies/utils/Create2Upgradeable.sol#56-82) uses assembly
	- INLINE ASM (contracts/dependencies/utils/Create2Upgradeable.sol#62-81)
StorageSlotUpgradeable.getAddressSlot(bytes32) (contracts/dependencies/utils/StorageSlotUpgradeable.sol#52-57) uses assembly
	- INLINE ASM (contracts/dependencies/utils/StorageSlotUpgradeable.sol#54-56)
StorageSlotUpgradeable.getBooleanSlot(bytes32) (contracts/dependencies/utils/StorageSlotUpgradeable.sol#62-67) uses assembly
	- INLINE ASM (contracts/dependencies/utils/StorageSlotUpgradeable.sol#64-66)
StorageSlotUpgradeable.getBytes32Slot(bytes32) (contracts/dependencies/utils/StorageSlotUpgradeable.sol#72-77) uses assembly
	- INLINE ASM (contracts/dependencies/utils/StorageSlotUpgradeable.sol#74-76)
StorageSlotUpgradeable.getUint256Slot(bytes32) (contracts/dependencies/utils/StorageSlotUpgradeable.sol#82-87) uses assembly
	- INLINE ASM (contracts/dependencies/utils/StorageSlotUpgradeable.sol#84-86)
StringsUpgradeable.toString(uint256) (contracts/dependencies/utils/StringsUpgradeable.sol#18-38) uses assembly
	- INLINE ASM (contracts/dependencies/utils/StringsUpgradeable.sol#24-26)
	- INLINE ASM (contracts/dependencies/utils/StringsUpgradeable.sol#30-32)
ECDSAUpgradeable.tryRecover(bytes32,bytes) (contracts/dependencies/utils/cryptography/ECDSAUpgradeable.sol#55-72) uses assembly
	- INLINE ASM (contracts/dependencies/utils/cryptography/ECDSAUpgradeable.sol#63-67)
MerkleProofUpgradeable._efficientHash(bytes32,bytes32) (contracts/dependencies/utils/cryptography/MerkleProofUpgradeable.sol#204-211) uses assembly
	- INLINE ASM (contracts/dependencies/utils/cryptography/MerkleProofUpgradeable.sol#206-210)
ERC165CheckerUpgradeable.supportsERC165InterfaceUnchecked(address,bytes4) (contracts/dependencies/utils/introspection/ERC165CheckerUpgradeable.sol#107-122) uses assembly
	- INLINE ASM (contracts/dependencies/utils/introspection/ERC165CheckerUpgradeable.sol#115-119)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) uses assembly
	- INLINE ASM (contracts/dependencies/utils/math/MathUpgradeable.sol#66-70)
	- INLINE ASM (contracts/dependencies/utils/math/MathUpgradeable.sol#86-93)
	- INLINE ASM (contracts/dependencies/utils/math/MathUpgradeable.sol#100-109)
EnumerableSetUpgradeable.values(EnumerableSetUpgradeable.Bytes32Set) (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#219-229) uses assembly
	- INLINE ASM (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#224-226)
EnumerableSetUpgradeable.values(EnumerableSetUpgradeable.AddressSet) (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#293-303) uses assembly
	- INLINE ASM (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#298-300)
EnumerableSetUpgradeable.values(EnumerableSetUpgradeable.UintSet) (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#367-377) uses assembly
	- INLINE ASM (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#372-374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
7 different versions of Solidity are used:
	- Version constraint ^0.8.0 is used by:
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/access/Ownable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/Strings.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#4)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol#4)
		-^0.8.0 (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/access/AccessControlUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/access/IAccessControlEnumerableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/access/IAccessControlUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/access/Ownable2StepUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/access/OwnableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/finance/VestingWalletUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/governance/GovernorUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/IGovernorUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/governance/utils/IVotesUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/governance/utils/VotesUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1155MetadataURIUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1155ReceiverUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1155Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1271Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1363ReceiverUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1363SpenderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1363Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC165Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1820ImplementerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC1820RegistryUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC20MetadataUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC20Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC2309Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC2981Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC3156FlashBorrowerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC3156FlashLenderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC3156Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC4626Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC721EnumerableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC721MetadataUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC721ReceiverUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC721Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC777RecipientUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC777SenderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/IERC777Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/draft-IERC1822Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/interfaces/draft-IERC2612Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/proxy/ClonesUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/proxy/beacon/IBeaconUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/security/PausableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/security/PullPaymentUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/IERC1155ReceiverUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/IERC1155Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/IERC20Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/utils/SafeERC20Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/IERC721ReceiverUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/IERC721Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/extensions/draft-ERC721VotesUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC777/IERC777RecipientUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC777/IERC777SenderUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/token/common/ERC2981Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/ArraysUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/Base64Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/CheckpointsUpgradeable.sol#5)
		-^0.8.0 (contracts/dependencies/utils/ContextUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/CountersUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/Create2Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/MulticallUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/StorageSlotUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/StringsUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/TimersUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/cryptography/ECDSAUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/cryptography/MerkleProofUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/cryptography/SignatureCheckerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/cryptography/draft-EIP712Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/ERC165CheckerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/IERC165Upgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/IERC1820ImplementerUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/introspection/IERC1820RegistryUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/math/MathUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/math/SafeCastUpgradeable.sol#5)
		-^0.8.0 (contracts/dependencies/utils/math/SafeMathUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/math/SignedMathUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/math/SignedSafeMathUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/utils/structs/BitMapsUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/utils/structs/EnumerableMapUpgradeable.sol#5)
		-^0.8.0 (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#5)
		-^0.8.0 (contracts/dependencies/vendor/amb/IAMBUpgradeable.sol#3)
		-^0.8.0 (contracts/dependencies/vendor/arbitrum/IBridgeUpgradeable.sol#20)
		-^0.8.0 (contracts/dependencies/vendor/arbitrum/IInboxUpgradeable.sol#20)
		-^0.8.0 (contracts/dependencies/vendor/arbitrum/IMessageProviderUpgradeable.sol#20)
		-^0.8.0 (contracts/dependencies/vendor/arbitrum/IOutboxUpgradeable.sol#20)
		-^0.8.0 (contracts/dependencies/vendor/compound/ICompoundTimelockUpgradeable.sol#4)
		-^0.8.0 (contracts/dependencies/vendor/polygon/IFxMessageProcessorUpgradeable.sol#3)
	- Version constraint ^0.8.2 is used by:
		-^0.8.2 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4)
		-^0.8.2 (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#4)
		-^0.8.2 (contracts/dependencies/proxy/utils/Initializable.sol#4)
	- Version constraint ^0.8.1 is used by:
		-^0.8.1 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#4)
		-^0.8.1 (node_modules/@openzeppelin/contracts/utils/Address.sol#4)
		-^0.8.1 (contracts/dependencies/utils/AddressUpgradeable.sol#4)
	- Version constraint ^0.8.4 is used by:
		-^0.8.4 (contracts/COA-Contracts/Busd.sol#3)
		-^0.8.4 (contracts/COA-Contracts/Prlz.sol#3)
		-^0.8.4 (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#2)
		-^0.8.4 (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#4)
		-^0.8.4 (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#2)
		-^0.8.4 (contracts/COA-Contracts/land-nfts-v2/YARD.sol#2)
		-^0.8.4 (contracts/COA-Contracts/land-nfts/ACRE.sol#2)
		-^0.8.4 (contracts/COA-Contracts/land-nfts/ERC721A.sol#4)
		-^0.8.4 (contracts/COA-Contracts/land-nfts/PLOT.sol#2)
		-^0.8.4 (contracts/COA-Contracts/land-nfts/YARD.sol#2)
		-^0.8.4 (contracts/Migrator.sol#2)
		-^0.8.4 (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/amb/LibAMBUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/arbitrum/LibArbitrumL1Upgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/arbitrum/LibArbitrumL2Upgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/errorsUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/optimism/LibOptimismUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#4)
		-^0.8.4 (contracts/dependencies/utils/structs/DoubleEndedQueueUpgradeable.sol#3)
		-^0.8.4 (contracts/interfaces/ICollectible.sol#2)
		-^0.8.4 (contracts/interfaces/IERC721Receiver.sol#2)
	- Version constraint ^0.8.9 is used by:
		-^0.8.9 (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#4)
	- Version constraint >=0.4.21<0.9.0 is used by:
		->=0.4.21<0.9.0 (contracts/dependencies/vendor/arbitrum/IArbSysUpgradeable.sol#3)
	- Version constraint >0.5.0<0.9.0 is used by:
		->0.5.0<0.9.0 (contracts/dependencies/vendor/optimism/ICrossDomainMessengerUpgradeable.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
ACRE._tax(address) (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#114-118) is never used and should be removed
ATLACRE._tax(address) (contracts/COA-Contracts/land-nfts/ACRE.sol#71-75) is never used and should be removed
ATLPLOT._tax(address) (contracts/COA-Contracts/land-nfts/PLOT.sol#66-70) is never used and should be removed
ATLYARD._tax(address) (contracts/COA-Contracts/land-nfts/YARD.sol#71-75) is never used and should be removed
AccessControlCrossChainUpgradeable.__AccessControlCrossChain_init() (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#27-28) is never used and should be removed
AccessControlCrossChainUpgradeable.__AccessControlCrossChain_init_unchained() (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#30-31) is never used and should be removed
AccessControlEnumerableUpgradeable.__AccessControlEnumerable_init() (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#15-16) is never used and should be removed
AccessControlEnumerableUpgradeable.__AccessControlEnumerable_init_unchained() (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#18-19) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init() (contracts/dependencies/access/AccessControlUpgradeable.sol#51-52) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init_unchained() (contracts/dependencies/access/AccessControlUpgradeable.sol#54-55) is never used and should be removed
ConditionalEscrowUpgradeable.__ConditionalEscrow_init() (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#15-17) is never used and should be removed
ConditionalEscrowUpgradeable.__ConditionalEscrow_init_unchained() (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#19-20) is never used and should be removed
ContextUpgradeable.__Context_init() (contracts/dependencies/utils/ContextUpgradeable.sol#18-19) is never used and should be removed
ContextUpgradeable.__Context_init_unchained() (contracts/dependencies/utils/ContextUpgradeable.sol#21-22) is never used and should be removed
CrossChainEnabledAMBUpgradeable._crossChainSender() (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#47-49) is never used and should be removed
CrossChainEnabledAMBUpgradeable._isCrossChain() (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#40-42) is never used and should be removed
CrossChainEnabledArbitrumL1Upgradeable._crossChainSender() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#42-44) is never used and should be removed
CrossChainEnabledArbitrumL1Upgradeable._isCrossChain() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#35-37) is never used and should be removed
CrossChainEnabledArbitrumL2Upgradeable.__CrossChainEnabledArbitrumL2_init() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#28-29) is never used and should be removed
CrossChainEnabledArbitrumL2Upgradeable.__CrossChainEnabledArbitrumL2_init_unchained() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#31-32) is never used and should be removed
CrossChainEnabledArbitrumL2Upgradeable._crossChainSender() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#43-45) is never used and should be removed
CrossChainEnabledArbitrumL2Upgradeable._isCrossChain() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#36-38) is never used and should be removed
CrossChainEnabledOptimismUpgradeable._crossChainSender() (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#39-41) is never used and should be removed
CrossChainEnabledOptimismUpgradeable._isCrossChain() (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#32-34) is never used and should be removed
CrossChainEnabledPolygonChildUpgradeable._crossChainSender() (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#47-49) is never used and should be removed
CrossChainEnabledUpgradeable.__CrossChainEnabled_init() (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#22-23) is never used and should be removed
CrossChainEnabledUpgradeable.__CrossChainEnabled_init_unchained() (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#25-26) is never used and should be removed
EIP712Upgradeable.__EIP712_init(string,string) (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#50-52) is never used and should be removed
EIP712Upgradeable.__EIP712_init_unchained(string,string) (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#54-59) is never used and should be removed
ERC1155BurnableUpgradeable.__ERC1155Burnable_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#16-17) is never used and should be removed
ERC1155BurnableUpgradeable.__ERC1155Burnable_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#19-20) is never used and should be removed
ERC1155HolderUpgradeable.__ERC1155Holder_init() (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#18-19) is never used and should be removed
ERC1155HolderUpgradeable.__ERC1155Holder_init_unchained() (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#21-22) is never used and should be removed
ERC1155PausableUpgradeable.__ERC1155Pausable_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#20-22) is never used and should be removed
ERC1155PausableUpgradeable.__ERC1155Pausable_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#24-25) is never used and should be removed
ERC1155ReceiverUpgradeable.__ERC1155Receiver_init() (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#14-15) is never used and should be removed
ERC1155ReceiverUpgradeable.__ERC1155Receiver_init_unchained() (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#17-18) is never used and should be removed
ERC1155SupplyUpgradeable.__ERC1155Supply_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#18-19) is never used and should be removed
ERC1155SupplyUpgradeable.__ERC1155Supply_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#21-22) is never used and should be removed
ERC1155URIStorageUpgradeable.__ERC1155URIStorage_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#17-19) is never used and should be removed
ERC1155URIStorageUpgradeable.__ERC1155URIStorage_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#21-23) is never used and should be removed
ERC1155URIStorageUpgradeable._setBaseURI(string) (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#68-70) is never used and should be removed
ERC1155URIStorageUpgradeable._setURI(uint256,string) (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#60-63) is never used and should be removed
ERC1155Upgradeable.__ERC1155_init(string) (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#36-38) is never used and should be removed
ERC165StorageUpgradeable.__ERC165Storage_init() (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#16-17) is never used and should be removed
ERC165StorageUpgradeable.__ERC165Storage_init_unchained() (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#19-20) is never used and should be removed
ERC165StorageUpgradeable._registerInterface(bytes4) (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#44-47) is never used and should be removed
ERC165Upgradeable.__ERC165_init() (contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#24-25) is never used and should be removed
ERC165Upgradeable.__ERC165_init_unchained() (contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#27-28) is never used and should be removed
ERC1820ImplementerUpgradeable.__ERC1820Implementer_init() (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#18-19) is never used and should be removed
ERC1820ImplementerUpgradeable.__ERC1820Implementer_init_unchained() (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#21-22) is never used and should be removed
ERC1820ImplementerUpgradeable._registerInterfaceForAddress(bytes32,address) (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#47-49) is never used and should be removed
ERC1967UpgradeUpgradeable.__ERC1967Upgrade_init() (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#21-22) is never used and should be removed
ERC1967UpgradeUpgradeable.__ERC1967Upgrade_init_unchained() (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#24-25) is never used and should be removed
ERC1967UpgradeUpgradeable._changeAdmin(address) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#139-142) is never used and should be removed
ERC1967UpgradeUpgradeable._getAdmin() (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#122-124) is never used and should be removed
ERC1967UpgradeUpgradeable._getBeacon() (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#158-160) is never used and should be removed
ERC1967UpgradeUpgradeable._setAdmin(address) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#129-132) is never used and should be removed
ERC1967UpgradeUpgradeable._setBeacon(address) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#165-172) is never used and should be removed
ERC1967UpgradeUpgradeable._upgradeBeaconToAndCall(address,bytes,bool) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#180-190) is never used and should be removed
ERC20BurnableUpgradeable.__ERC20Burnable_init() (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#16-17) is never used and should be removed
ERC20BurnableUpgradeable.__ERC20Burnable_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#19-20) is never used and should be removed
ERC20CappedUpgradeable.__ERC20Capped_init(uint256) (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#21-23) is never used and should be removed
ERC20CappedUpgradeable.__ERC20Capped_init_unchained(uint256) (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#25-28) is never used and should be removed
ERC20CappedUpgradeable._mint(address,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#40-43) is never used and should be removed
ERC20FlashMintUpgradeable.__ERC20FlashMint_init() (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#21-22) is never used and should be removed
ERC20FlashMintUpgradeable.__ERC20FlashMint_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#24-25) is never used and should be removed
ERC20PausableUpgradeable.__ERC20Pausable_init() (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#18-20) is never used and should be removed
ERC20PausableUpgradeable.__ERC20Pausable_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#22-23) is never used and should be removed
ERC20PermitUpgradeable.__ERC20Permit_init(string) (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#47-49) is never used and should be removed
ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string) (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#51) is never used and should be removed
ERC20SnapshotUpgradeable.__ERC20Snapshot_init() (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#44-45) is never used and should be removed
ERC20SnapshotUpgradeable.__ERC20Snapshot_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#47-48) is never used and should be removed
ERC20SnapshotUpgradeable._snapshot() (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#94-100) is never used and should be removed
ERC20Upgradeable.__ERC20_init(string,string) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#55-57) is never used and should be removed
ERC20VotesCompUpgradeable.__ERC20VotesComp_init() (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#27-28) is never used and should be removed
ERC20VotesCompUpgradeable.__ERC20VotesComp_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#30-31) is never used and should be removed
ERC20VotesCompUpgradeable._maxSupply() (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#49-51) is never used and should be removed
ERC20VotesUpgradeable.__ERC20Votes_init() (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#29-30) is never used and should be removed
ERC20VotesUpgradeable.__ERC20Votes_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#32-33) is never used and should be removed
ERC20VotesUpgradeable._add(uint256,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#264-266) is never used and should be removed
ERC20VotesUpgradeable._burn(address,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#191-195) is never used and should be removed
ERC20VotesUpgradeable._maxSupply() (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#174-176) is never used and should be removed
ERC20VotesUpgradeable._mint(address,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#181-186) is never used and should be removed
ERC20VotesUpgradeable._subtract(uint256,uint256) (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#268-270) is never used and should be removed
ERC20WrapperUpgradeable.__ERC20Wrapper_init(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#24-26) is never used and should be removed
ERC20WrapperUpgradeable.__ERC20Wrapper_init_unchained(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#28-30) is never used and should be removed
ERC20WrapperUpgradeable._recover(address) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#65-69) is never used and should be removed
ERC2771ContextUpgradeable._msgData() (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#37-43) is never used and should be removed
ERC2771ContextUpgradeable._msgSender() (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#25-35) is never used and should be removed
ERC2981Upgradeable.__ERC2981_init() (contracts/dependencies/token/common/ERC2981Upgradeable.sol#26-27) is never used and should be removed
ERC2981Upgradeable.__ERC2981_init_unchained() (contracts/dependencies/token/common/ERC2981Upgradeable.sol#29-30) is never used and should be removed
ERC2981Upgradeable._deleteDefaultRoyalty() (contracts/dependencies/token/common/ERC2981Upgradeable.sol#88-90) is never used and should be removed
ERC2981Upgradeable._resetTokenRoyalty(uint256) (contracts/dependencies/token/common/ERC2981Upgradeable.sol#114-116) is never used and should be removed
ERC2981Upgradeable._setDefaultRoyalty(address,uint96) (contracts/dependencies/token/common/ERC2981Upgradeable.sol#78-83) is never used and should be removed
ERC2981Upgradeable._setTokenRoyalty(uint256,address,uint96) (contracts/dependencies/token/common/ERC2981Upgradeable.sol#100-109) is never used and should be removed
ERC4626Upgradeable.__ERC4626_init(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#36-38) is never used and should be removed
ERC4626Upgradeable.__ERC4626_init_unchained(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#40-50) is never used and should be removed
ERC721A._baseURI() (contracts/COA-Contracts/land-nfts/ERC721A.sol#251-253) is never used and should be removed
ERC721A._burn(uint256) (contracts/COA-Contracts/land-nfts/ERC721A.sol#487-527) is never used and should be removed
ERC721A._getAux(address) (contracts/COA-Contracts/land-nfts/ERC721A.sol#170-173) is never used and should be removed
ERC721A._numberBurned(address) (contracts/COA-Contracts/land-nfts/ERC721A.sol#162-165) is never used and should be removed
ERC721A._numberMinted(address) (contracts/COA-Contracts/land-nfts/ERC721A.sol#154-157) is never used and should be removed
ERC721A._setAux(address,uint64) (contracts/COA-Contracts/land-nfts/ERC721A.sol#179-182) is never used and should be removed
ERC721A._totalMinted() (contracts/COA-Contracts/land-nfts/ERC721A.sol#125-131) is never used and should be removed
ERC721BurnableUpgradeable.__ERC721Burnable_init() (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#15-16) is never used and should be removed
ERC721BurnableUpgradeable.__ERC721Burnable_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#18-19) is never used and should be removed
ERC721ConsecutiveUpgradeable.__ERC721Consecutive_init() (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#34-35) is never used and should be removed
ERC721ConsecutiveUpgradeable.__ERC721Consecutive_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#37-38) is never used and should be removed
ERC721ConsecutiveUpgradeable._mint(address,uint256) (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#103-106) is never used and should be removed
ERC721ConsecutiveUpgradeable._mintConsecutive(address,uint96) (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#73-95) is never used and should be removed
ERC721EnumerableUpgradeable.__ERC721Enumerable_init() (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#16-17) is never used and should be removed
ERC721EnumerableUpgradeable.__ERC721Enumerable_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#19-20) is never used and should be removed
ERC721EnumerableUpgradeable._addTokenToAllTokensEnumeration(uint256) (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#139-142) is never used and should be removed
ERC721EnumerableUpgradeable._addTokenToOwnerEnumeration(address,uint256) (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#129-133) is never used and should be removed
ERC721EnumerableUpgradeable._beforeConsecutiveTokenTransfer(address,address,uint256,uint96) (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#111-122) is never used and should be removed
ERC721EnumerableUpgradeable._beforeTokenTransfer(address,address,uint256) (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#77-94) is never used and should be removed
ERC721EnumerableUpgradeable._removeTokenFromAllTokensEnumeration(uint256) (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#177-195) is never used and should be removed
ERC721EnumerableUpgradeable._removeTokenFromOwnerEnumeration(address,uint256) (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#152-170) is never used and should be removed
ERC721HolderUpgradeable.__ERC721Holder_init() (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#16-17) is never used and should be removed
ERC721HolderUpgradeable.__ERC721Holder_init_unchained() (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#19-20) is never used and should be removed
ERC721PausableUpgradeable.__ERC721Pausable_init() (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#18-20) is never used and should be removed
ERC721PausableUpgradeable.__ERC721Pausable_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#22-23) is never used and should be removed
ERC721PausableUpgradeable._beforeConsecutiveTokenTransfer(address,address,uint256,uint96) (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#41-50) is never used and should be removed
ERC721PresetMinterPauserAutoIdUpgradeable._beforeConsecutiveTokenTransfer(address,address,uint256,uint96) (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#145-152) is never used and should be removed
ERC721RoyaltyUpgradeable.__ERC721Royalty_init() (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#25-26) is never used and should be removed
ERC721RoyaltyUpgradeable.__ERC721Royalty_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#28-29) is never used and should be removed
ERC721RoyaltyUpgradeable._burn(uint256) (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#40-43) is never used and should be removed
ERC721URIStorageUpgradeable.__ERC721URIStorage_init() (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#13-14) is never used and should be removed
ERC721URIStorageUpgradeable.__ERC721URIStorage_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#16-17) is never used and should be removed
ERC721URIStorageUpgradeable._burn(uint256) (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#61-67) is never used and should be removed
ERC721URIStorageUpgradeable._setTokenURI(uint256,string) (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#51-54) is never used and should be removed
ERC721Upgradeable.__ERC721_init(string,string) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#45-47) is never used and should be removed
ERC721Upgradeable._afterConsecutiveTokenTransfer(address,address,uint256,uint96) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#520-525) is never used and should be removed
ERC721Upgradeable._beforeConsecutiveTokenTransfer(address,address,uint256,uint96) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#502-514) is never used and should be removed
ERC721Upgradeable._safeMint(address,uint256) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#259-261) is never used and should be removed
ERC721Upgradeable._safeMint(address,uint256,bytes) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#267-277) is never used and should be removed
ERC721VotesUpgradeable.__ERC721Votes_init() (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#21-22) is never used and should be removed
ERC721VotesUpgradeable.__ERC721Votes_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#24-25) is never used and should be removed
ERC721VotesUpgradeable._afterConsecutiveTokenTransfer(address,address,uint256,uint96) (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#45-53) is never used and should be removed
ERC777Upgradeable.__ERC777_init(string,string,address[]) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#61-67) is never used and should be removed
EscrowUpgradeable.__Escrow_init_unchained() (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#28-29) is never used and should be removed
GovernorCompatibilityBravoUpgradeable.__GovernorCompatibilityBravo_init() (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#23-24) is never used and should be removed
GovernorCompatibilityBravoUpgradeable.__GovernorCompatibilityBravo_init_unchained() (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#26-27) is never used and should be removed
GovernorCountingSimpleUpgradeable.__GovernorCountingSimple_init() (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#15-16) is never used and should be removed
GovernorCountingSimpleUpgradeable.__GovernorCountingSimple_init_unchained() (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#18-19) is never used and should be removed
GovernorPreventLateQuorumUpgradeable.__GovernorPreventLateQuorum_init(uint64) (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#39-41) is never used and should be removed
GovernorPreventLateQuorumUpgradeable.__GovernorPreventLateQuorum_init_unchained(uint64) (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#43-45) is never used and should be removed
GovernorProposalThresholdUpgradeable.__GovernorProposalThreshold_init() (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#16-17) is never used and should be removed
GovernorProposalThresholdUpgradeable.__GovernorProposalThreshold_init_unchained() (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#19-20) is never used and should be removed
GovernorSettingsUpgradeable.__GovernorSettings_init(uint256,uint256,uint256) (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#26-32) is never used and should be removed
GovernorSettingsUpgradeable.__GovernorSettings_init_unchained(uint256,uint256,uint256) (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#34-42) is never used and should be removed
GovernorTimelockCompoundUpgradeable.__GovernorTimelockCompound_init(ICompoundTimelockUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#44-46) is never used and should be removed
GovernorTimelockCompoundUpgradeable.__GovernorTimelockCompound_init_unchained(ICompoundTimelockUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#48-50) is never used and should be removed
GovernorTimelockCompoundUpgradeable._cancel(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#143-160) is never used and should be removed
GovernorTimelockControlUpgradeable.__GovernorTimelockControl_init(TimelockControllerUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#39-41) is never used and should be removed
GovernorTimelockControlUpgradeable.__GovernorTimelockControl_init_unchained(TimelockControllerUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#43-45) is never used and should be removed
GovernorTimelockControlUpgradeable._cancel(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#134-148) is never used and should be removed
GovernorUpgradeable.__Governor_init(string) (contracts/dependencies/governance/GovernorUpgradeable.sol#79-82) is never used and should be removed
GovernorUpgradeable.__Governor_init_unchained(string) (contracts/dependencies/governance/GovernorUpgradeable.sol#84-86) is never used and should be removed
GovernorVotesCompUpgradeable.__GovernorVotesComp_init(ERC20VotesCompUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#20-22) is never used and should be removed
GovernorVotesCompUpgradeable.__GovernorVotesComp_init_unchained(ERC20VotesCompUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#24-26) is never used and should be removed
GovernorVotesQuorumFractionUpgradeable.__GovernorVotesQuorumFraction_init(uint256) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#32-34) is never used and should be removed
GovernorVotesQuorumFractionUpgradeable.__GovernorVotesQuorumFraction_init_unchained(uint256) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#36-38) is never used and should be removed
GovernorVotesUpgradeable.__GovernorVotes_init(IVotesUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#20-22) is never used and should be removed
GovernorVotesUpgradeable.__GovernorVotes_init_unchained(IVotesUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#24-26) is never used and should be removed
IGovernorCompatibilityBravoUpgradeable.__IGovernorCompatibilityBravo_init() (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#15-16) is never used and should be removed
IGovernorCompatibilityBravoUpgradeable.__IGovernorCompatibilityBravo_init_unchained() (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#18-19) is never used and should be removed
IGovernorTimelockUpgradeable.__IGovernorTimelock_init() (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#15-16) is never used and should be removed
IGovernorTimelockUpgradeable.__IGovernorTimelock_init_unchained() (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#18-19) is never used and should be removed
IGovernorUpgradeable.__IGovernor_init() (contracts/dependencies/governance/IGovernorUpgradeable.sol#15-16) is never used and should be removed
IGovernorUpgradeable.__IGovernor_init_unchained() (contracts/dependencies/governance/IGovernorUpgradeable.sol#18-19) is never used and should be removed
Initializable._disableInitializers() (contracts/dependencies/proxy/utils/Initializable.sol#144-150) is never used and should be removed
Initializable._getInitializedVersion() (contracts/dependencies/proxy/utils/Initializable.sol#155-157) is never used and should be removed
Initializable._isInitializing() (contracts/dependencies/proxy/utils/Initializable.sol#162-164) is never used and should be removed
MinimalForwarderUpgradeable.__MinimalForwarder_init() (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#35-37) is never used and should be removed
MinimalForwarderUpgradeable.__MinimalForwarder_init_unchained() (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#39) is never used and should be removed
MulticallUpgradeable.__Multicall_init() (contracts/dependencies/utils/MulticallUpgradeable.sol#15-16) is never used and should be removed
MulticallUpgradeable.__Multicall_init_unchained() (contracts/dependencies/utils/MulticallUpgradeable.sol#18-19) is never used and should be removed
Ownable2StepUpgradeable.__Ownable2Step_init() (contracts/dependencies/access/Ownable2StepUpgradeable.sol#21-23) is never used and should be removed
Ownable2StepUpgradeable.__Ownable2Step_init_unchained() (contracts/dependencies/access/Ownable2StepUpgradeable.sol#25-26) is never used and should be removed
OwnableUpgradeable.__Ownable_init() (contracts/dependencies/access/OwnableUpgradeable.sol#29-31) is never used and should be removed
PLOT._tax(address) (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#115-119) is never used and should be removed
PausableUpgradeable.__Pausable_init() (contracts/dependencies/security/PausableUpgradeable.sol#34-36) is never used and should be removed
PaymentSplitterUpgradeable.__PaymentSplitter_init(address[],uint256[]) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#52-54) is never used and should be removed
PaymentSplitterUpgradeable.__PaymentSplitter_init_unchained(address[],uint256[]) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#56-63) is never used and should be removed
PaymentSplitterUpgradeable._addPayee(address,uint256) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#209-218) is never used and should be removed
PullPaymentUpgradeable.__PullPayment_init() (contracts/dependencies/security/PullPaymentUpgradeable.sol#32-34) is never used and should be removed
PullPaymentUpgradeable.__PullPayment_init_unchained() (contracts/dependencies/security/PullPaymentUpgradeable.sol#36-39) is never used and should be removed
PullPaymentUpgradeable._asyncTransfer(address,uint256) (contracts/dependencies/security/PullPaymentUpgradeable.sol#79-81) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#40-42) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#44-46) is never used and should be removed
RefundEscrowUpgradeable.__RefundEscrow_init(address) (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#38-41) is never used and should be removed
RefundEscrowUpgradeable.__RefundEscrow_init_unchained(address) (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#43-47) is never used and should be removed
TimelockControllerUpgradeable.__TimelockController_init(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#78-85) is never used and should be removed
TimelockControllerUpgradeable.__TimelockController_init_unchained(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#87-119) is never used and should be removed
TimelockControllerWith46MigrationUpgradeable.__TimelockControllerWith46Migration_init(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#21-28) is never used and should be removed
TimelockControllerWith46MigrationUpgradeable.__TimelockControllerWith46Migration_init_unchained(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#30-35) is never used and should be removed
TokenTimelockUpgradeable.__TokenTimelock_init(IERC20Upgradeable,address,uint256) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#35-41) is never used and should be removed
TokenTimelockUpgradeable.__TokenTimelock_init_unchained(IERC20Upgradeable,address,uint256) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#43-52) is never used and should be removed
UUPSUpgradeable.__UUPSUpgradeable_init() (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#23-24) is never used and should be removed
UUPSUpgradeable.__UUPSUpgradeable_init_unchained() (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#26-27) is never used and should be removed
VestingWalletUpgradeable.__VestingWallet_init(address,uint64,uint64) (contracts/dependencies/finance/VestingWalletUpgradeable.sol#35-41) is never used and should be removed
VestingWalletUpgradeable.__VestingWallet_init_unchained(address,uint64,uint64) (contracts/dependencies/finance/VestingWalletUpgradeable.sol#43-52) is never used and should be removed
VotesUpgradeable.__Votes_init() (contracts/dependencies/governance/utils/VotesUpgradeable.sol#33-34) is never used and should be removed
VotesUpgradeable.__Votes_init_unchained() (contracts/dependencies/governance/utils/VotesUpgradeable.sol#36-37) is never used and should be removed
VotesUpgradeable._add(uint256,uint256) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#179-181) is never used and should be removed
VotesUpgradeable._getTotalSupply() (contracts/dependencies/governance/utils/VotesUpgradeable.sol#87-89) is never used and should be removed
VotesUpgradeable._subtract(uint256,uint256) (contracts/dependencies/governance/utils/VotesUpgradeable.sol#183-185) is never used and should be removed
YARD._tax(address) (contracts/COA-Contracts/land-nfts-v2/YARD.sol#119-123) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/access/Ownable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Strings.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol#4)
	- ^0.8.0 (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/access/AccessControlUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/access/IAccessControlEnumerableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/access/IAccessControlUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/access/Ownable2StepUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/access/OwnableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/finance/VestingWalletUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/governance/GovernorUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/IGovernorUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/governance/utils/IVotesUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/governance/utils/VotesUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1155MetadataURIUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1155ReceiverUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1155Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1271Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1363ReceiverUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1363SpenderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1363Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC165Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1820ImplementerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC1820RegistryUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC20MetadataUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC20Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC2309Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC2981Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC3156FlashBorrowerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC3156FlashLenderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC3156Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC4626Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC721EnumerableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC721MetadataUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC721ReceiverUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC721Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC777RecipientUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC777SenderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/IERC777Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/draft-IERC1822Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/interfaces/draft-IERC2612Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/proxy/ClonesUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/proxy/beacon/IBeaconUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/security/PausableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/security/PullPaymentUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/IERC1155ReceiverUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/IERC1155Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/IERC20Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/utils/SafeERC20Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/IERC721ReceiverUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/IERC721Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/IERC721MetadataUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/extensions/draft-ERC721VotesUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC777/IERC777RecipientUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC777/IERC777SenderUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC777/IERC777Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/token/common/ERC2981Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/ArraysUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/Base64Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/CheckpointsUpgradeable.sol#5)
	- ^0.8.0 (contracts/dependencies/utils/ContextUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/CountersUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/Create2Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/MulticallUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/StorageSlotUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/StringsUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/TimersUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/cryptography/ECDSAUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/cryptography/MerkleProofUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/cryptography/SignatureCheckerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/cryptography/draft-EIP712Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/ERC165CheckerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/IERC165Upgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/IERC1820ImplementerUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/introspection/IERC1820RegistryUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/math/MathUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/math/SafeCastUpgradeable.sol#5)
	- ^0.8.0 (contracts/dependencies/utils/math/SafeMathUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/math/SignedMathUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/math/SignedSafeMathUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/utils/structs/BitMapsUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/utils/structs/EnumerableMapUpgradeable.sol#5)
	- ^0.8.0 (contracts/dependencies/utils/structs/EnumerableSetUpgradeable.sol#5)
	- ^0.8.0 (contracts/dependencies/vendor/amb/IAMBUpgradeable.sol#3)
	- ^0.8.0 (contracts/dependencies/vendor/arbitrum/IBridgeUpgradeable.sol#20)
	- ^0.8.0 (contracts/dependencies/vendor/arbitrum/IInboxUpgradeable.sol#20)
	- ^0.8.0 (contracts/dependencies/vendor/arbitrum/IMessageProviderUpgradeable.sol#20)
	- ^0.8.0 (contracts/dependencies/vendor/arbitrum/IOutboxUpgradeable.sol#20)
	- ^0.8.0 (contracts/dependencies/vendor/compound/ICompoundTimelockUpgradeable.sol#4)
	- ^0.8.0 (contracts/dependencies/vendor/polygon/IFxMessageProcessorUpgradeable.sol#3)
Version constraint ^0.8.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.2 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4)
	- ^0.8.2 (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#4)
	- ^0.8.2 (contracts/dependencies/proxy/utils/Initializable.sol#4)
Version constraint ^0.8.1 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.1 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#4)
	- ^0.8.1 (node_modules/@openzeppelin/contracts/utils/Address.sol#4)
	- ^0.8.1 (contracts/dependencies/utils/AddressUpgradeable.sol#4)
Version constraint ^0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- ^0.8.4 (contracts/COA-Contracts/Busd.sol#3)
	- ^0.8.4 (contracts/COA-Contracts/Prlz.sol#3)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#2)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#4)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#2)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts-v2/YARD.sol#2)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts/ACRE.sol#2)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts/ERC721A.sol#4)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts/PLOT.sol#2)
	- ^0.8.4 (contracts/COA-Contracts/land-nfts/YARD.sol#2)
	- ^0.8.4 (contracts/Migrator.sol#2)
	- ^0.8.4 (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/amb/LibAMBUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/arbitrum/LibArbitrumL1Upgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/arbitrum/LibArbitrumL2Upgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/errorsUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/optimism/LibOptimismUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#4)
	- ^0.8.4 (contracts/dependencies/utils/structs/DoubleEndedQueueUpgradeable.sol#3)
	- ^0.8.4 (contracts/interfaces/ICollectible.sol#2)
	- ^0.8.4 (contracts/interfaces/IERC721Receiver.sol#2)
Version constraint ^0.8.9 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- ^0.8.9 (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#4)
Version constraint >=0.4.21<0.9.0 is too complex.
It is used by:
	- >=0.4.21<0.9.0 (contracts/dependencies/vendor/arbitrum/IArbSysUpgradeable.sol#3)
Version constraint >0.5.0<0.9.0 is too complex.
It is used by:
	- >0.5.0<0.9.0 (contracts/dependencies/vendor/optimism/ICrossDomainMessengerUpgradeable.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#64-69):
	- (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#67)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#128-137):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#135)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#155-162):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#160)
Low level call in AddressUpgradeable.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#180-187):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#185)
Low level call in Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#64-69):
	- (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#67)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#128-137):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#135)
Low level call in Address.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#155-162):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#160)
Low level call in Address.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#180-187):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#185)
Low level call in CrossChainEnabledPolygonChildUpgradeable.__functionDelegateCall(address,bytes) (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#76-82):
	- (success,returndata) = target.delegatecall(data) (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#80)
Low level call in GovernorUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/GovernorUpgradeable.sol#322-334):
	- (success,returndata) = targets[i].call{value: values[i]}(calldatas[i]) (contracts/dependencies/governance/GovernorUpgradeable.sol#331)
Low level call in TimelockControllerUpgradeable._execute(address,uint256,bytes) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#355-362):
	- (success,None) = target.call{value: value}(data) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#360)
Low level call in MinimalForwarderUpgradeable.execute(MinimalForwarderUpgradeable.ForwardRequest,bytes) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#52-77):
	- (success,returndata) = req.to.call{gas: req.gas,value: req.value}(abi.encodePacked(req.data,req.from)) (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#60-62)
Low level call in ERC1967UpgradeUpgradeable._functionDelegateCall(address,bytes) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#198-204):
	- (success,returndata) = target.delegatecall(data) (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#202)
Low level call in AddressUpgradeable.sendValue(address,uint256) (contracts/dependencies/utils/AddressUpgradeable.sol#60-65):
	- (success,None) = recipient.call{value: amount}() (contracts/dependencies/utils/AddressUpgradeable.sol#63)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (contracts/dependencies/utils/AddressUpgradeable.sol#128-137):
	- (success,returndata) = target.call{value: value}(data) (contracts/dependencies/utils/AddressUpgradeable.sol#135)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (contracts/dependencies/utils/AddressUpgradeable.sol#155-162):
	- (success,returndata) = target.staticcall(data) (contracts/dependencies/utils/AddressUpgradeable.sol#160)
Low level call in MulticallUpgradeable._functionDelegateCall(address,bytes) (contracts/dependencies/utils/MulticallUpgradeable.sol#37-43):
	- (success,returndata) = target.delegatecall(data) (contracts/dependencies/utils/MulticallUpgradeable.sol#41)
Low level call in SignatureCheckerUpgradeable.isValidSignatureNow(address,bytes32,bytes) (contracts/dependencies/utils/cryptography/SignatureCheckerUpgradeable.sol#25-41):
	- (success,result) = signer.staticcall(abi.encodeWithSelector(IERC1271Upgradeable.isValidSignature.selector,hash,signature)) (contracts/dependencies/utils/cryptography/SignatureCheckerUpgradeable.sol#35-37)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function AccessControlUpgradeable.__AccessControl_init() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#76-77) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#79-80) is not in mixedCase
Variable AccessControlUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#260) is not in mixedCase
Function ContextUpgradeable.__Context_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#18-19) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#21-22) is not in mixedCase
Variable ContextUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#40) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#24-25) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#27-28) is not in mixedCase
Variable ERC165Upgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#41) is not in mixedCase
Parameter BUSD.mint(address,uint256)._to (contracts/COA-Contracts/Busd.sol#10) is not in mixedCase
Parameter BUSD.mint(address,uint256)._amount (contracts/COA-Contracts/Busd.sol#10) is not in mixedCase
Parameter PRLZ.mint(address,uint256)._to (contracts/COA-Contracts/Prlz.sol#10) is not in mixedCase
Parameter PRLZ.mint(address,uint256)._amount (contracts/COA-Contracts/Prlz.sol#10) is not in mixedCase
Variable ACRE._paymentToken (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#27) is not in mixedCase
Variable ACRE._feeCollector (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#28) is not in mixedCase
Variable ACRE._currentBatch (contracts/COA-Contracts/land-nfts-v2/ACRE.sol#29) is not in mixedCase
Function ERC721A.ERC721A_Initialize(string,string) (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#105-112) is not in mixedCase
Parameter ERC721A.multiOwnerOf(uint256[],address)._ids (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#245) is not in mixedCase
Parameter ERC721A.multiOwnerOf(uint256[],address)._owner (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#245) is not in mixedCase
Parameter ERC721A.safeTransferFrom(address,address,uint256,bytes)._data (contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#390) is not in mixedCase
Variable PLOT._paymentToken (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#28) is not in mixedCase
Variable PLOT._feeCollector (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#29) is not in mixedCase
Variable PLOT._currentBatch (contracts/COA-Contracts/land-nfts-v2/PLOT.sol#30) is not in mixedCase
Variable YARD._paymentToken (contracts/COA-Contracts/land-nfts-v2/YARD.sol#28) is not in mixedCase
Variable YARD._feeCollector (contracts/COA-Contracts/land-nfts-v2/YARD.sol#29) is not in mixedCase
Variable YARD._currentBatch (contracts/COA-Contracts/land-nfts-v2/YARD.sol#30) is not in mixedCase
Variable ATLACRE._paymentToken (contracts/COA-Contracts/land-nfts/ACRE.sol#22) is not in mixedCase
Variable ATLACRE._feeCollector (contracts/COA-Contracts/land-nfts/ACRE.sol#23) is not in mixedCase
Variable ATLACRE._currentBatch (contracts/COA-Contracts/land-nfts/ACRE.sol#24) is not in mixedCase
Variable ATLPLOT._paymentToken (contracts/COA-Contracts/land-nfts/PLOT.sol#22) is not in mixedCase
Variable ATLPLOT._feeCollector (contracts/COA-Contracts/land-nfts/PLOT.sol#23) is not in mixedCase
Variable ATLPLOT._currentBatch (contracts/COA-Contracts/land-nfts/PLOT.sol#24) is not in mixedCase
Variable ATLPLOT._txFeeAmount (contracts/COA-Contracts/land-nfts/PLOT.sol#25) is not in mixedCase
Variable ATLYARD._paymentToken (contracts/COA-Contracts/land-nfts/YARD.sol#22) is not in mixedCase
Variable ATLYARD._feeCollector (contracts/COA-Contracts/land-nfts/YARD.sol#23) is not in mixedCase
Variable ATLYARD._currentBatch (contracts/COA-Contracts/land-nfts/YARD.sol#24) is not in mixedCase
Variable ATLYARD._txFeeAmount (contracts/COA-Contracts/land-nfts/YARD.sol#25) is not in mixedCase
Parameter Migrator.migrateERC20Token(uint256,address,address)._amount (contracts/Migrator.sol#139) is not in mixedCase
Parameter Migrator.migrateERC20Token(uint256,address,address)._token1 (contracts/Migrator.sol#140) is not in mixedCase
Parameter Migrator.migrateERC20Token(uint256,address,address)._token2 (contracts/Migrator.sol#141) is not in mixedCase
Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._acre (contracts/Migrator.sol#217) is not in mixedCase
Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._plot (contracts/Migrator.sol#218) is not in mixedCase
Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._yard (contracts/Migrator.sol#219) is not in mixedCase
Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._acre (contracts/Migrator.sol#287) is not in mixedCase
Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._yard (contracts/Migrator.sol#288) is not in mixedCase
Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._plot (contracts/Migrator.sol#289) is not in mixedCase
Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._acreV2 (contracts/Migrator.sol#290) is not in mixedCase
Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._yardV2 (contracts/Migrator.sol#291) is not in mixedCase
Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._plotV2 (contracts/Migrator.sol#292) is not in mixedCase
Parameter Migrator.setTokenInfo(address,address,uint256)._tokenV1 (contracts/Migrator.sol#326) is not in mixedCase
Parameter Migrator.setTokenInfo(address,address,uint256)._tokenV2 (contracts/Migrator.sol#327) is not in mixedCase
Parameter Migrator.setTokenInfo(address,address,uint256)._price (contracts/Migrator.sol#328) is not in mixedCase
Variable Migrator.Requirements (contracts/Migrator.sol#28) is not in mixedCase
Function AccessControlCrossChainUpgradeable.__AccessControlCrossChain_init() (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#27-28) is not in mixedCase
Function AccessControlCrossChainUpgradeable.__AccessControlCrossChain_init_unchained() (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#30-31) is not in mixedCase
Variable AccessControlCrossChainUpgradeable.__gap (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#57) is not in mixedCase
Function AccessControlEnumerableUpgradeable.__AccessControlEnumerable_init() (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#15-16) is not in mixedCase
Function AccessControlEnumerableUpgradeable.__AccessControlEnumerable_init_unchained() (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#18-19) is not in mixedCase
Variable AccessControlEnumerableUpgradeable.__gap (contracts/dependencies/access/AccessControlEnumerableUpgradeable.sol#76) is not in mixedCase
Function Ownable2StepUpgradeable.__Ownable2Step_init() (contracts/dependencies/access/Ownable2StepUpgradeable.sol#21-23) is not in mixedCase
Function Ownable2StepUpgradeable.__Ownable2Step_init_unchained() (contracts/dependencies/access/Ownable2StepUpgradeable.sol#25-26) is not in mixedCase
Variable Ownable2StepUpgradeable.__gap (contracts/dependencies/access/Ownable2StepUpgradeable.sol#70) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (contracts/dependencies/access/OwnableUpgradeable.sol#29-31) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (contracts/dependencies/access/OwnableUpgradeable.sol#33-35) is not in mixedCase
Variable OwnableUpgradeable.__gap (contracts/dependencies/access/OwnableUpgradeable.sol#94) is not in mixedCase
Function CrossChainEnabledUpgradeable.__CrossChainEnabled_init() (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#22-23) is not in mixedCase
Function CrossChainEnabledUpgradeable.__CrossChainEnabled_init_unchained() (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#25-26) is not in mixedCase
Variable CrossChainEnabledUpgradeable.__gap (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#66) is not in mixedCase
Variable CrossChainEnabledAMBUpgradeable.__gap (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#56) is not in mixedCase
Variable CrossChainEnabledArbitrumL1Upgradeable.__gap (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#51) is not in mixedCase
Function CrossChainEnabledArbitrumL2Upgradeable.__CrossChainEnabledArbitrumL2_init() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#28-29) is not in mixedCase
Function CrossChainEnabledArbitrumL2Upgradeable.__CrossChainEnabledArbitrumL2_init_unchained() (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#31-32) is not in mixedCase
Variable CrossChainEnabledArbitrumL2Upgradeable.__gap (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#52) is not in mixedCase
Variable CrossChainEnabledOptimismUpgradeable.__gap (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#48) is not in mixedCase
Function CrossChainEnabledPolygonChildUpgradeable.__functionDelegateCall(address,bytes) (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#76-82) is not in mixedCase
Variable CrossChainEnabledPolygonChildUpgradeable.__gap (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#89) is not in mixedCase
Function PaymentSplitterUpgradeable.__PaymentSplitter_init(address[],uint256[]) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#52-54) is not in mixedCase
Function PaymentSplitterUpgradeable.__PaymentSplitter_init_unchained(address[],uint256[]) (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#56-63) is not in mixedCase
Variable PaymentSplitterUpgradeable.__gap (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#225) is not in mixedCase
Function VestingWalletUpgradeable.__VestingWallet_init(address,uint64,uint64) (contracts/dependencies/finance/VestingWalletUpgradeable.sol#35-41) is not in mixedCase
Function VestingWalletUpgradeable.__VestingWallet_init_unchained(address,uint64,uint64) (contracts/dependencies/finance/VestingWalletUpgradeable.sol#43-52) is not in mixedCase
Variable VestingWalletUpgradeable.__gap (contracts/dependencies/finance/VestingWalletUpgradeable.sol#166) is not in mixedCase
Function GovernorUpgradeable.__Governor_init(string) (contracts/dependencies/governance/GovernorUpgradeable.sol#79-82) is not in mixedCase
Function GovernorUpgradeable.__Governor_init_unchained(string) (contracts/dependencies/governance/GovernorUpgradeable.sol#84-86) is not in mixedCase
Variable GovernorUpgradeable.__gap (contracts/dependencies/governance/GovernorUpgradeable.sol#608) is not in mixedCase
Function IGovernorUpgradeable.__IGovernor_init() (contracts/dependencies/governance/IGovernorUpgradeable.sol#15-16) is not in mixedCase
Function IGovernorUpgradeable.__IGovernor_init_unchained() (contracts/dependencies/governance/IGovernorUpgradeable.sol#18-19) is not in mixedCase
Function IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113) is not in mixedCase
Variable IGovernorUpgradeable.__gap (contracts/dependencies/governance/IGovernorUpgradeable.sol#288) is not in mixedCase
Function TimelockControllerUpgradeable.__TimelockController_init(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#78-85) is not in mixedCase
Function TimelockControllerUpgradeable.__TimelockController_init_unchained(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#87-119) is not in mixedCase
Variable TimelockControllerUpgradeable.__gap (contracts/dependencies/governance/TimelockControllerUpgradeable.sol#439) is not in mixedCase
Function TimelockControllerWith46MigrationUpgradeable.__TimelockControllerWith46Migration_init(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#21-28) is not in mixedCase
Function TimelockControllerWith46MigrationUpgradeable.__TimelockControllerWith46Migration_init_unchained(uint256,address[],address[],address) (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#30-35) is not in mixedCase
Variable TimelockControllerWith46MigrationUpgradeable.__gap (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#55) is not in mixedCase
Function GovernorCompatibilityBravoUpgradeable.__GovernorCompatibilityBravo_init() (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#23-24) is not in mixedCase
Function GovernorCompatibilityBravoUpgradeable.__GovernorCompatibilityBravo_init_unchained() (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#26-27) is not in mixedCase
Function GovernorCompatibilityBravoUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#50-52) is not in mixedCase
Variable GovernorCompatibilityBravoUpgradeable.__gap (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#297) is not in mixedCase
Function IGovernorCompatibilityBravoUpgradeable.__IGovernorCompatibilityBravo_init() (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#15-16) is not in mixedCase
Function IGovernorCompatibilityBravoUpgradeable.__IGovernorCompatibilityBravo_init_unchained() (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#18-19) is not in mixedCase
Variable IGovernorCompatibilityBravoUpgradeable.__gap (contracts/dependencies/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol#126) is not in mixedCase
Function GovernorCountingSimpleUpgradeable.__GovernorCountingSimple_init() (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#15-16) is not in mixedCase
Function GovernorCountingSimpleUpgradeable.__GovernorCountingSimple_init_unchained() (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#18-19) is not in mixedCase
Function GovernorCountingSimpleUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#42-44) is not in mixedCase
Variable GovernorCountingSimpleUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#119) is not in mixedCase
Function GovernorPreventLateQuorumUpgradeable.__GovernorPreventLateQuorum_init(uint64) (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#39-41) is not in mixedCase
Function GovernorPreventLateQuorumUpgradeable.__GovernorPreventLateQuorum_init_unchained(uint64) (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#43-45) is not in mixedCase
Variable GovernorPreventLateQuorumUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#119) is not in mixedCase
Function GovernorProposalThresholdUpgradeable.__GovernorProposalThreshold_init() (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#16-17) is not in mixedCase
Function GovernorProposalThresholdUpgradeable.__GovernorProposalThreshold_init_unchained() (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#19-20) is not in mixedCase
Variable GovernorProposalThresholdUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#35) is not in mixedCase
Function GovernorSettingsUpgradeable.__GovernorSettings_init(uint256,uint256,uint256) (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#26-32) is not in mixedCase
Function GovernorSettingsUpgradeable.__GovernorSettings_init_unchained(uint256,uint256,uint256) (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#34-42) is not in mixedCase
Variable GovernorSettingsUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#129) is not in mixedCase
Function GovernorTimelockCompoundUpgradeable.__GovernorTimelockCompound_init(ICompoundTimelockUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#44-46) is not in mixedCase
Function GovernorTimelockCompoundUpgradeable.__GovernorTimelockCompound_init_unchained(ICompoundTimelockUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#48-50) is not in mixedCase
Function GovernorTimelockCompoundUpgradeable.__acceptAdmin() (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#173-175) is not in mixedCase
Variable GovernorTimelockCompoundUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#204) is not in mixedCase
Function GovernorTimelockControlUpgradeable.__GovernorTimelockControl_init(TimelockControllerUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#39-41) is not in mixedCase
Function GovernorTimelockControlUpgradeable.__GovernorTimelockControl_init_unchained(TimelockControllerUpgradeable) (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#43-45) is not in mixedCase
Variable GovernorTimelockControlUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#177) is not in mixedCase
Function GovernorVotesCompUpgradeable.__GovernorVotesComp_init(ERC20VotesCompUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#20-22) is not in mixedCase
Function GovernorVotesCompUpgradeable.__GovernorVotesComp_init_unchained(ERC20VotesCompUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#24-26) is not in mixedCase
Variable GovernorVotesCompUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#44) is not in mixedCase
Function GovernorVotesQuorumFractionUpgradeable.__GovernorVotesQuorumFraction_init(uint256) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#32-34) is not in mixedCase
Function GovernorVotesQuorumFractionUpgradeable.__GovernorVotesQuorumFraction_init_unchained(uint256) (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#36-38) is not in mixedCase
Variable GovernorVotesQuorumFractionUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#130) is not in mixedCase
Function GovernorVotesUpgradeable.__GovernorVotes_init(IVotesUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#20-22) is not in mixedCase
Function GovernorVotesUpgradeable.__GovernorVotes_init_unchained(IVotesUpgradeable) (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#24-26) is not in mixedCase
Variable GovernorVotesUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorVotesUpgradeable.sol#44) is not in mixedCase
Function IGovernorTimelockUpgradeable.__IGovernorTimelock_init() (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#15-16) is not in mixedCase
Function IGovernorTimelockUpgradeable.__IGovernorTimelock_init_unchained() (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#18-19) is not in mixedCase
Variable IGovernorTimelockUpgradeable.__gap (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#38) is not in mixedCase
Function VotesUpgradeable.__Votes_init() (contracts/dependencies/governance/utils/VotesUpgradeable.sol#33-34) is not in mixedCase
Function VotesUpgradeable.__Votes_init_unchained() (contracts/dependencies/governance/utils/VotesUpgradeable.sol#36-37) is not in mixedCase
Function VotesUpgradeable.DOMAIN_SEPARATOR() (contracts/dependencies/governance/utils/VotesUpgradeable.sol#209-211) is not in mixedCase
Variable VotesUpgradeable.__gap (contracts/dependencies/governance/utils/VotesUpgradeable.sol#223) is not in mixedCase
Variable ERC2771ContextUpgradeable.__gap (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#50) is not in mixedCase
Function MinimalForwarderUpgradeable.__MinimalForwarder_init() (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#35-37) is not in mixedCase
Function MinimalForwarderUpgradeable.__MinimalForwarder_init_unchained() (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#39) is not in mixedCase
Variable MinimalForwarderUpgradeable.__gap (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#84) is not in mixedCase
Function ERC1967UpgradeUpgradeable.__ERC1967Upgrade_init() (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#21-22) is not in mixedCase
Function ERC1967UpgradeUpgradeable.__ERC1967Upgrade_init_unchained() (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#24-25) is not in mixedCase
Variable ERC1967UpgradeUpgradeable.__gap (contracts/dependencies/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol#211) is not in mixedCase
Function UUPSUpgradeable.__UUPSUpgradeable_init() (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#23-24) is not in mixedCase
Function UUPSUpgradeable.__UUPSUpgradeable_init_unchained() (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#26-27) is not in mixedCase
Variable UUPSUpgradeable.__self (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#29) is not in mixedCase
Variable UUPSUpgradeable.__gap (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#107) is not in mixedCase
Function PausableUpgradeable.__Pausable_init() (contracts/dependencies/security/PausableUpgradeable.sol#34-36) is not in mixedCase
Function PausableUpgradeable.__Pausable_init_unchained() (contracts/dependencies/security/PausableUpgradeable.sol#38-40) is not in mixedCase
Variable PausableUpgradeable.__gap (contracts/dependencies/security/PausableUpgradeable.sol#116) is not in mixedCase
Function PullPaymentUpgradeable.__PullPayment_init() (contracts/dependencies/security/PullPaymentUpgradeable.sol#32-34) is not in mixedCase
Function PullPaymentUpgradeable.__PullPayment_init_unchained() (contracts/dependencies/security/PullPaymentUpgradeable.sol#36-39) is not in mixedCase
Variable PullPaymentUpgradeable.__gap (contracts/dependencies/security/PullPaymentUpgradeable.sol#88) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#40-42) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#44-46) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (contracts/dependencies/security/ReentrancyGuardUpgradeable.sol#80) is not in mixedCase
Function ERC1155Upgradeable.__ERC1155_init(string) (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#36-38) is not in mixedCase
Function ERC1155Upgradeable.__ERC1155_init_unchained(string) (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#40-42) is not in mixedCase
Variable ERC1155Upgradeable.__gap (contracts/dependencies/token/ERC1155/ERC1155Upgradeable.sol#528) is not in mixedCase
Function ERC1155BurnableUpgradeable.__ERC1155Burnable_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#16-17) is not in mixedCase
Function ERC1155BurnableUpgradeable.__ERC1155Burnable_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#19-20) is not in mixedCase
Variable ERC1155BurnableUpgradeable.__gap (contracts/dependencies/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol#52) is not in mixedCase
Function ERC1155PausableUpgradeable.__ERC1155Pausable_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#20-22) is not in mixedCase
Function ERC1155PausableUpgradeable.__ERC1155Pausable_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#24-25) is not in mixedCase
Variable ERC1155PausableUpgradeable.__gap (contracts/dependencies/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol#51) is not in mixedCase
Function ERC1155SupplyUpgradeable.__ERC1155Supply_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#18-19) is not in mixedCase
Function ERC1155SupplyUpgradeable.__ERC1155Supply_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#21-22) is not in mixedCase
Variable ERC1155SupplyUpgradeable.__gap (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#76) is not in mixedCase
Function ERC1155URIStorageUpgradeable.__ERC1155URIStorage_init() (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#17-19) is not in mixedCase
Function ERC1155URIStorageUpgradeable.__ERC1155URIStorage_init_unchained() (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#21-23) is not in mixedCase
Variable ERC1155URIStorageUpgradeable.__gap (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#77) is not in mixedCase
Function ERC1155PresetMinterPauserUpgradeable.__ERC1155PresetMinterPauser_init(string) (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#40-44) is not in mixedCase
Function ERC1155PresetMinterPauserUpgradeable.__ERC1155PresetMinterPauser_init_unchained(string) (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#46-51) is not in mixedCase
Variable ERC1155PresetMinterPauserUpgradeable.__gap (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#144) is not in mixedCase
Function ERC1155HolderUpgradeable.__ERC1155Holder_init() (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#18-19) is not in mixedCase
Function ERC1155HolderUpgradeable.__ERC1155Holder_init_unchained() (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#21-22) is not in mixedCase
Variable ERC1155HolderUpgradeable.__gap (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#48) is not in mixedCase
Function ERC1155ReceiverUpgradeable.__ERC1155Receiver_init() (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#14-15) is not in mixedCase
Function ERC1155ReceiverUpgradeable.__ERC1155Receiver_init_unchained() (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#17-18) is not in mixedCase
Variable ERC1155ReceiverUpgradeable.__gap (contracts/dependencies/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol#31) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init(string,string) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#55-57) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#59-62) is not in mixedCase
Variable ERC20Upgradeable.__gap (contracts/dependencies/token/ERC20/ERC20Upgradeable.sol#400) is not in mixedCase
Function ERC20BurnableUpgradeable.__ERC20Burnable_init() (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#16-17) is not in mixedCase
Function ERC20BurnableUpgradeable.__ERC20Burnable_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#19-20) is not in mixedCase
Variable ERC20BurnableUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20BurnableUpgradeable.sol#51) is not in mixedCase
Function ERC20CappedUpgradeable.__ERC20Capped_init(uint256) (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#21-23) is not in mixedCase
Function ERC20CappedUpgradeable.__ERC20Capped_init_unchained(uint256) (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#25-28) is not in mixedCase
Variable ERC20CappedUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#50) is not in mixedCase
Function ERC20FlashMintUpgradeable.__ERC20FlashMint_init() (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#21-22) is not in mixedCase
Function ERC20FlashMintUpgradeable.__ERC20FlashMint_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#24-25) is not in mixedCase
Variable ERC20FlashMintUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#121) is not in mixedCase
Function ERC20PausableUpgradeable.__ERC20Pausable_init() (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#18-20) is not in mixedCase
Function ERC20PausableUpgradeable.__ERC20Pausable_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#22-23) is not in mixedCase
Variable ERC20PausableUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20PausableUpgradeable.sol#46) is not in mixedCase
Function ERC20SnapshotUpgradeable.__ERC20Snapshot_init() (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#44-45) is not in mixedCase
Function ERC20SnapshotUpgradeable.__ERC20Snapshot_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#47-48) is not in mixedCase
Variable ERC20SnapshotUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#207) is not in mixedCase
Function ERC20VotesCompUpgradeable.__ERC20VotesComp_init() (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#27-28) is not in mixedCase
Function ERC20VotesCompUpgradeable.__ERC20VotesComp_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#30-31) is not in mixedCase
Variable ERC20VotesCompUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#58) is not in mixedCase
Function ERC20VotesUpgradeable.__ERC20Votes_init() (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#29-30) is not in mixedCase
Function ERC20VotesUpgradeable.__ERC20Votes_init_unchained() (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#32-33) is not in mixedCase
Variable ERC20VotesUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20VotesUpgradeable.sol#284) is not in mixedCase
Function ERC20WrapperUpgradeable.__ERC20Wrapper_init(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#24-26) is not in mixedCase
Function ERC20WrapperUpgradeable.__ERC20Wrapper_init_unchained(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#28-30) is not in mixedCase
Variable ERC20WrapperUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#76) is not in mixedCase
Function ERC4626Upgradeable.__ERC4626_init(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#36-38) is not in mixedCase
Function ERC4626Upgradeable.__ERC4626_init_unchained(IERC20Upgradeable) (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#40-50) is not in mixedCase
Variable ERC4626Upgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#269) is not in mixedCase
Function ERC20PermitUpgradeable.__ERC20Permit_init(string) (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#47-49) is not in mixedCase
Function ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string) (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#51) is not in mixedCase
Function ERC20PermitUpgradeable.DOMAIN_SEPARATOR() (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#88-90) is not in mixedCase
Variable ERC20PermitUpgradeable._PERMIT_TYPEHASH_DEPRECATED_SLOT (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#40) is not in mixedCase
Variable ERC20PermitUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#108) is not in mixedCase
Function IERC20PermitUpgradeable.DOMAIN_SEPARATOR() (contracts/dependencies/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol#59) is not in mixedCase
Function ERC20PresetFixedSupplyUpgradeable.__ERC20PresetFixedSupply_init(string,string,uint256,address) (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#36-44) is not in mixedCase
Function ERC20PresetFixedSupplyUpgradeable.__ERC20PresetFixedSupply_init_unchained(string,string,uint256,address) (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#46-53) is not in mixedCase
Variable ERC20PresetFixedSupplyUpgradeable.__gap (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#60) is not in mixedCase
Function ERC20PresetMinterPauserUpgradeable.__ERC20PresetMinterPauser_init(string,string) (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#42-46) is not in mixedCase
Function ERC20PresetMinterPauserUpgradeable.__ERC20PresetMinterPauser_init_unchained(string,string) (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#48-53) is not in mixedCase
Variable ERC20PresetMinterPauserUpgradeable.__gap (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#110) is not in mixedCase
Function TokenTimelockUpgradeable.__TokenTimelock_init(IERC20Upgradeable,address,uint256) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#35-41) is not in mixedCase
Function TokenTimelockUpgradeable.__TokenTimelock_init_unchained(IERC20Upgradeable,address,uint256) (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#43-52) is not in mixedCase
Variable TokenTimelockUpgradeable.__gap (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#93) is not in mixedCase
Function ERC721Upgradeable.__ERC721_init(string,string) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#45-47) is not in mixedCase
Function ERC721Upgradeable.__ERC721_init_unchained(string,string) (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#49-52) is not in mixedCase
Variable ERC721Upgradeable.__gap (contracts/dependencies/token/ERC721/ERC721Upgradeable.sol#532) is not in mixedCase
Function ERC721BurnableUpgradeable.__ERC721Burnable_init() (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#15-16) is not in mixedCase
Function ERC721BurnableUpgradeable.__ERC721Burnable_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#18-19) is not in mixedCase
Variable ERC721BurnableUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721BurnableUpgradeable.sol#38) is not in mixedCase
Function ERC721ConsecutiveUpgradeable.__ERC721Consecutive_init() (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#34-35) is not in mixedCase
Function ERC721ConsecutiveUpgradeable.__ERC721Consecutive_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#37-38) is not in mixedCase
Variable ERC721ConsecutiveUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#136) is not in mixedCase
Function ERC721EnumerableUpgradeable.__ERC721Enumerable_init() (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#16-17) is not in mixedCase
Function ERC721EnumerableUpgradeable.__ERC721Enumerable_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#19-20) is not in mixedCase
Variable ERC721EnumerableUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol#202) is not in mixedCase
Function ERC721PausableUpgradeable.__ERC721Pausable_init() (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#18-20) is not in mixedCase
Function ERC721PausableUpgradeable.__ERC721Pausable_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#22-23) is not in mixedCase
Variable ERC721PausableUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721PausableUpgradeable.sol#57) is not in mixedCase
Function ERC721RoyaltyUpgradeable.__ERC721Royalty_init() (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#25-26) is not in mixedCase
Function ERC721RoyaltyUpgradeable.__ERC721Royalty_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#28-29) is not in mixedCase
Variable ERC721RoyaltyUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#50) is not in mixedCase
Function ERC721URIStorageUpgradeable.__ERC721URIStorage_init() (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#13-14) is not in mixedCase
Function ERC721URIStorageUpgradeable.__ERC721URIStorage_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#16-17) is not in mixedCase
Variable ERC721URIStorageUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#74) is not in mixedCase
Function ERC721VotesUpgradeable.__ERC721Votes_init() (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#21-22) is not in mixedCase
Function ERC721VotesUpgradeable.__ERC721Votes_init_unchained() (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#24-25) is not in mixedCase
Variable ERC721VotesUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#67) is not in mixedCase
Function ERC721PresetMinterPauserAutoIdUpgradeable.__ERC721PresetMinterPauserAutoId_init(string,string,string) (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#62-70) is not in mixedCase
Function ERC721PresetMinterPauserAutoIdUpgradeable.__ERC721PresetMinterPauserAutoId_init_unchained(string,string,string) (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#72-83) is not in mixedCase
Variable ERC721PresetMinterPauserAutoIdUpgradeable.__gap (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#172) is not in mixedCase
Function ERC721HolderUpgradeable.__ERC721Holder_init() (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#16-17) is not in mixedCase
Function ERC721HolderUpgradeable.__ERC721Holder_init_unchained() (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#19-20) is not in mixedCase
Variable ERC721HolderUpgradeable.__gap (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#40) is not in mixedCase
Function ERC777Upgradeable.__ERC777_init(string,string,address[]) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#61-67) is not in mixedCase
Function ERC777Upgradeable.__ERC777_init_unchained(string,string,address[]) (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#69-85) is not in mixedCase
Variable ERC777Upgradeable.__gap (contracts/dependencies/token/ERC777/ERC777Upgradeable.sol#562) is not in mixedCase
Function ERC777PresetFixedSupplyUpgradeable.__ERC777PresetFixedSupply_init(string,string,address[],uint256,address) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#31-40) is not in mixedCase
Function ERC777PresetFixedSupplyUpgradeable.__ERC777PresetFixedSupply_init_unchained(string,string,address[],uint256,address) (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#42-50) is not in mixedCase
Variable ERC777PresetFixedSupplyUpgradeable.__gap (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#57) is not in mixedCase
Function ERC2981Upgradeable.__ERC2981_init() (contracts/dependencies/token/common/ERC2981Upgradeable.sol#26-27) is not in mixedCase
Function ERC2981Upgradeable.__ERC2981_init_unchained() (contracts/dependencies/token/common/ERC2981Upgradeable.sol#29-30) is not in mixedCase
Parameter ERC2981Upgradeable.royaltyInfo(uint256,uint256)._tokenId (contracts/dependencies/token/common/ERC2981Upgradeable.sol#49) is not in mixedCase
Parameter ERC2981Upgradeable.royaltyInfo(uint256,uint256)._salePrice (contracts/dependencies/token/common/ERC2981Upgradeable.sol#49) is not in mixedCase
Variable ERC2981Upgradeable.__gap (contracts/dependencies/token/common/ERC2981Upgradeable.sol#123) is not in mixedCase
Function MulticallUpgradeable.__Multicall_init() (contracts/dependencies/utils/MulticallUpgradeable.sol#15-16) is not in mixedCase
Function MulticallUpgradeable.__Multicall_init_unchained() (contracts/dependencies/utils/MulticallUpgradeable.sol#18-19) is not in mixedCase
Variable MulticallUpgradeable.__gap (contracts/dependencies/utils/MulticallUpgradeable.sol#50) is not in mixedCase
Function EIP712Upgradeable.__EIP712_init(string,string) (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#50-52) is not in mixedCase
Function EIP712Upgradeable.__EIP712_init_unchained(string,string) (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#54-59) is not in mixedCase
Function EIP712Upgradeable._EIP712NameHash() (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#101-103) is not in mixedCase
Function EIP712Upgradeable._EIP712VersionHash() (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#111-113) is not in mixedCase
Variable EIP712Upgradeable._HASHED_NAME (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#32) is not in mixedCase
Variable EIP712Upgradeable._HASHED_VERSION (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#33) is not in mixedCase
Variable EIP712Upgradeable.__gap (contracts/dependencies/utils/cryptography/EIP712Upgradeable.sol#120) is not in mixedCase
Function ConditionalEscrowUpgradeable.__ConditionalEscrow_init() (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#15-17) is not in mixedCase
Function ConditionalEscrowUpgradeable.__ConditionalEscrow_init_unchained() (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#19-20) is not in mixedCase
Variable ConditionalEscrowUpgradeable.__gap (contracts/dependencies/utils/escrow/ConditionalEscrowUpgradeable.sol#38) is not in mixedCase
Function EscrowUpgradeable.__Escrow_init() (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#24-26) is not in mixedCase
Function EscrowUpgradeable.__Escrow_init_unchained() (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#28-29) is not in mixedCase
Variable EscrowUpgradeable.__gap (contracts/dependencies/utils/escrow/EscrowUpgradeable.sol#83) is not in mixedCase
Function RefundEscrowUpgradeable.__RefundEscrow_init(address) (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#38-41) is not in mixedCase
Function RefundEscrowUpgradeable.__RefundEscrow_init_unchained(address) (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#43-47) is not in mixedCase
Variable RefundEscrowUpgradeable.__gap (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#112) is not in mixedCase
Function ERC165StorageUpgradeable.__ERC165Storage_init() (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#16-17) is not in mixedCase
Function ERC165StorageUpgradeable.__ERC165Storage_init_unchained() (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#19-20) is not in mixedCase
Variable ERC165StorageUpgradeable.__gap (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#54) is not in mixedCase
Function ERC1820ImplementerUpgradeable.__ERC1820Implementer_init() (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#18-19) is not in mixedCase
Function ERC1820ImplementerUpgradeable.__ERC1820Implementer_init_unchained() (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#21-22) is not in mixedCase
Variable ERC1820ImplementerUpgradeable.__gap (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#56) is not in mixedCase
Function ICompoundTimelockUpgradeable.GRACE_PERIOD() (contracts/dependencies/vendor/compound/ICompoundTimelockUpgradeable.sol#41) is not in mixedCase
Function ICompoundTimelockUpgradeable.MINIMUM_DELAY() (contracts/dependencies/vendor/compound/ICompoundTimelockUpgradeable.sol#44) is not in mixedCase
Function ICompoundTimelockUpgradeable.MAXIMUM_DELAY() (contracts/dependencies/vendor/compound/ICompoundTimelockUpgradeable.sol#47) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "token (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#60)" inERC20FlashMintUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#20-122)
Redundant expression "amount (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#61)" inERC20FlashMintUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#20-122)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
ClonesUpgradeable.clone(address) (contracts/dependencies/proxy/ClonesUpgradeable.sol#25-36) uses literals with too many digits:
	- mstore(uint256,uint256)(0x00,implementation << 0x60 >> 0xe8 | 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) (contracts/dependencies/proxy/ClonesUpgradeable.sol#30)
ClonesUpgradeable.cloneDeterministic(address,bytes32) (contracts/dependencies/proxy/ClonesUpgradeable.sol#45-56) uses literals with too many digits:
	- mstore(uint256,uint256)(0x00,implementation << 0x60 >> 0xe8 | 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) (contracts/dependencies/proxy/ClonesUpgradeable.sol#50)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
AccessControlCrossChainUpgradeable (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#26-58) does not implement functions:
	- CrossChainEnabledUpgradeable._crossChainSender() (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#59)
	- CrossChainEnabledUpgradeable._isCrossChain() (contracts/dependencies/crosschain/CrossChainEnabledUpgradeable.sol#50)
GovernorCompatibilityBravoUpgradeable (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#22-298) does not implement functions:
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- IGovernorTimelockUpgradeable.proposalEta(uint256) (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#24)
	- IGovernorTimelockUpgradeable.queue(address[],uint256[],bytes[],bytes32) (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#26-31)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorTimelockUpgradeable.timelock() (contracts/dependencies/governance/extensions/IGovernorTimelockUpgradeable.sol#22)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorCountingSimpleUpgradeable (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#14-120) does not implement functions:
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorPreventLateQuorumUpgradeable (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#21-120) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorProposalThresholdUpgradeable (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#15-36) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorSettingsUpgradeable (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#14-130) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
GovernorTimelockCompoundUpgradeable (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#24-205) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorTimelockControlUpgradeable (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#27-178) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._getVotes(address,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#219-223)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorVotesCompUpgradeable (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#17-45) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.quorum(uint256) (contracts/dependencies/governance/IGovernorUpgradeable.sol#170)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
GovernorVotesQuorumFractionUpgradeable (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#17-131) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (contracts/dependencies/governance/IGovernorUpgradeable.sol#113)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256,bytes) (contracts/dependencies/governance/GovernorUpgradeable.sol#230-236)
	- GovernorUpgradeable._quorumReached(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#209)
	- GovernorUpgradeable._voteSucceeded(uint256) (contracts/dependencies/governance/GovernorUpgradeable.sol#214)
	- IGovernorUpgradeable.hasVoted(uint256,address) (contracts/dependencies/governance/IGovernorUpgradeable.sol#195)
	- IGovernorUpgradeable.votingDelay() (contracts/dependencies/governance/IGovernorUpgradeable.sol#152)
	- IGovernorUpgradeable.votingPeriod() (contracts/dependencies/governance/IGovernorUpgradeable.sol#161)
UUPSUpgradeable (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#22-108) does not implement functions:
	- UUPSUpgradeable._authorizeUpgrade(address) (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions
INFO:Detectors:
AccessControlCrossChainUpgradeable.__gap (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#57) is never used in AccessControlCrossChainUpgradeable (contracts/dependencies/access/AccessControlCrossChainUpgradeable.sol#26-58)
Ownable2StepUpgradeable.__gap (contracts/dependencies/access/Ownable2StepUpgradeable.sol#70) is never used in Ownable2StepUpgradeable (contracts/dependencies/access/Ownable2StepUpgradeable.sol#20-71)
CrossChainEnabledAMBUpgradeable.__gap (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#56) is never used in CrossChainEnabledAMBUpgradeable (contracts/dependencies/crosschain/amb/CrossChainEnabledAMBUpgradeable.sol#28-57)
CrossChainEnabledArbitrumL1Upgradeable.__gap (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#51) is never used in CrossChainEnabledArbitrumL1Upgradeable (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL1Upgradeable.sol#23-52)
CrossChainEnabledArbitrumL2Upgradeable.__gap (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#52) is never used in CrossChainEnabledArbitrumL2Upgradeable (contracts/dependencies/crosschain/arbitrum/CrossChainEnabledArbitrumL2Upgradeable.sol#27-53)
CrossChainEnabledOptimismUpgradeable.__gap (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#48) is never used in CrossChainEnabledOptimismUpgradeable (contracts/dependencies/crosschain/optimism/CrossChainEnabledOptimismUpgradeable.sol#20-49)
CrossChainEnabledPolygonChildUpgradeable.__gap (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#89) is never used in CrossChainEnabledPolygonChildUpgradeable (contracts/dependencies/crosschain/polygon/CrossChainEnabledPolygonChildUpgradeable.sol#27-90)
PaymentSplitterUpgradeable.__gap (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#225) is never used in PaymentSplitterUpgradeable (contracts/dependencies/finance/PaymentSplitterUpgradeable.sol#29-226)
VestingWalletUpgradeable.__gap (contracts/dependencies/finance/VestingWalletUpgradeable.sol#166) is never used in VestingWalletUpgradeable (contracts/dependencies/finance/VestingWalletUpgradeable.sol#22-167)
TimelockControllerWith46MigrationUpgradeable.__gap (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#55) is never used in TimelockControllerWith46MigrationUpgradeable (contracts/dependencies/governance/TimelockControllerWith46MigrationUpgradeable.sol#20-56)
GovernorCompatibilityBravoUpgradeable.__gap (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#297) is never used in GovernorCompatibilityBravoUpgradeable (contracts/dependencies/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol#22-298)
GovernorCountingSimpleUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#119) is never used in GovernorCountingSimpleUpgradeable (contracts/dependencies/governance/extensions/GovernorCountingSimpleUpgradeable.sol#14-120)
GovernorPreventLateQuorumUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#119) is never used in GovernorPreventLateQuorumUpgradeable (contracts/dependencies/governance/extensions/GovernorPreventLateQuorumUpgradeable.sol#21-120)
GovernorProposalThresholdUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#35) is never used in GovernorProposalThresholdUpgradeable (contracts/dependencies/governance/extensions/GovernorProposalThresholdUpgradeable.sol#15-36)
GovernorSettingsUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#129) is never used in GovernorSettingsUpgradeable (contracts/dependencies/governance/extensions/GovernorSettingsUpgradeable.sol#14-130)
GovernorTimelockCompoundUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#204) is never used in GovernorTimelockCompoundUpgradeable (contracts/dependencies/governance/extensions/GovernorTimelockCompoundUpgradeable.sol#24-205)
GovernorTimelockControlUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#177) is never used in GovernorTimelockControlUpgradeable (contracts/dependencies/governance/extensions/GovernorTimelockControlUpgradeable.sol#27-178)
GovernorVotesCompUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#44) is never used in GovernorVotesCompUpgradeable (contracts/dependencies/governance/extensions/GovernorVotesCompUpgradeable.sol#17-45)
GovernorVotesQuorumFractionUpgradeable.__gap (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#130) is never used in GovernorVotesQuorumFractionUpgradeable (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#17-131)
ERC2771ContextUpgradeable.__gap (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#50) is never used in ERC2771ContextUpgradeable (contracts/dependencies/metatx/ERC2771ContextUpgradeable.sol#12-51)
MinimalForwarderUpgradeable.__gap (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#84) is never used in MinimalForwarderUpgradeable (contracts/dependencies/metatx/MinimalForwarderUpgradeable.sol#18-85)
UUPSUpgradeable.__gap (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#107) is never used in UUPSUpgradeable (contracts/dependencies/proxy/utils/UUPSUpgradeable.sol#22-108)
PullPaymentUpgradeable.__gap (contracts/dependencies/security/PullPaymentUpgradeable.sol#88) is never used in PullPaymentUpgradeable (contracts/dependencies/security/PullPaymentUpgradeable.sol#29-89)
ERC1155SupplyUpgradeable.__gap (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#76) is never used in ERC1155SupplyUpgradeable (contracts/dependencies/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol#17-77)
ERC1155URIStorageUpgradeable.__gap (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#77) is never used in ERC1155URIStorageUpgradeable (contracts/dependencies/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol#16-78)
ERC1155PresetMinterPauserUpgradeable.__gap (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#144) is never used in ERC1155PresetMinterPauserUpgradeable (contracts/dependencies/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol#29-145)
ERC1155HolderUpgradeable.__gap (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#48) is never used in ERC1155HolderUpgradeable (contracts/dependencies/token/ERC1155/utils/ERC1155HolderUpgradeable.sol#17-49)
ERC20CappedUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#50) is never used in ERC20CappedUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20CappedUpgradeable.sol#14-51)
ERC20FlashMintUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#121) is never used in ERC20FlashMintUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol#20-122)
ERC20SnapshotUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#207) is never used in ERC20SnapshotUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol#43-208)
ERC20VotesCompUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#58) is never used in ERC20VotesCompUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol#26-59)
ERC20WrapperUpgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#76) is never used in ERC20WrapperUpgradeable (contracts/dependencies/token/ERC20/extensions/ERC20WrapperUpgradeable.sol#21-77)
ERC4626Upgradeable.__gap (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#269) is never used in ERC4626Upgradeable (contracts/dependencies/token/ERC20/extensions/ERC4626Upgradeable.sol#27-270)
ERC20PresetFixedSupplyUpgradeable.__gap (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#60) is never used in ERC20PresetFixedSupplyUpgradeable (contracts/dependencies/token/ERC20/presets/ERC20PresetFixedSupplyUpgradeable.sol#22-61)
ERC20PresetMinterPauserUpgradeable.__gap (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#110) is never used in ERC20PresetMinterPauserUpgradeable (contracts/dependencies/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol#29-111)
TokenTimelockUpgradeable.__gap (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#93) is never used in TokenTimelockUpgradeable (contracts/dependencies/token/ERC20/utils/TokenTimelockUpgradeable.sol#18-94)
ERC721ConsecutiveUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#136) is never used in ERC721ConsecutiveUpgradeable (contracts/dependencies/token/ERC721/extensions/ERC721ConsecutiveUpgradeable.sol#33-137)
ERC721RoyaltyUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#50) is never used in ERC721RoyaltyUpgradeable (contracts/dependencies/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol#24-51)
ERC721URIStorageUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#74) is never used in ERC721URIStorageUpgradeable (contracts/dependencies/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol#12-75)
ERC721VotesUpgradeable.__gap (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#67) is never used in ERC721VotesUpgradeable (contracts/dependencies/token/ERC721/extensions/ERC721VotesUpgradeable.sol#20-68)
ERC721PresetMinterPauserAutoIdUpgradeable.__gap (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#172) is never used in ERC721PresetMinterPauserAutoIdUpgradeable (contracts/dependencies/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol#32-173)
ERC721HolderUpgradeable.__gap (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#40) is never used in ERC721HolderUpgradeable (contracts/dependencies/token/ERC721/utils/ERC721HolderUpgradeable.sol#15-41)
ERC777PresetFixedSupplyUpgradeable.__gap (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#57) is never used in ERC777PresetFixedSupplyUpgradeable (contracts/dependencies/token/ERC777/presets/ERC777PresetFixedSupplyUpgradeable.sol#16-58)
MulticallUpgradeable.__gap (contracts/dependencies/utils/MulticallUpgradeable.sol#50) is never used in MulticallUpgradeable (contracts/dependencies/utils/MulticallUpgradeable.sol#14-51)
RefundEscrowUpgradeable.__gap (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#112) is never used in RefundEscrowUpgradeable (contracts/dependencies/utils/escrow/RefundEscrowUpgradeable.sol#19-113)
ERC165StorageUpgradeable.__gap (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#54) is never used in ERC165StorageUpgradeable (contracts/dependencies/utils/introspection/ERC165StorageUpgradeable.sol#15-55)
ERC1820ImplementerUpgradeable.__gap (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#56) is never used in ERC1820ImplementerUpgradeable (contracts/dependencies/utils/introspection/ERC1820ImplementerUpgradeable.sol#17-57)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
GovernorVotesQuorumFractionUpgradeable._quorumNumerator (contracts/dependencies/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#20) should be constant 
Migrator.totalAcreMigrated (contracts/Migrator.sol#32) should be constant 
Migrator.totalPlotMigrated (contracts/Migrator.sol#33) should be constant 
Migrator.totalYardMigrated (contracts/Migrator.sol#34) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
ATLACRE._maxBuyAmount (contracts/COA-Contracts/land-nfts/ACRE.sol#26) should be immutable 
ATLPLOT._maxBuyAmount (contracts/COA-Contracts/land-nfts/PLOT.sol#26) should be immutable 
ATLYARD._maxBuyAmount (contracts/COA-Contracts/land-nfts/YARD.sol#26) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:. analyzed (193 contracts with 93 detectors), 825 result(s) found
